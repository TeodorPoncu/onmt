SELECT count(*) FROM department WHERE age > 56
SELECT name , age , age FROM head ORDER BY age
SELECT creation , name , budget FROM department
SELECT max(budget_in_billions) , min(budget_in_billions) FROM department
SELECT avg(num) FROM department WHERE ranking BETWEEN 10 AND 15
SELECT name FROM department WHERE born_state != 'California'
SELECT DISTINCT T2.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T1.name = 'Alabama'
SELECT T2.name FROM department AS T1 JOIN department AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id HAVING count(*) >= 3
SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1
SELECT T2.name , T2.name FROM undergoes AS T1 JOIN team AS T2 ON T1.patient = T2.SSN WHERE T1.temporary_acting = 'Yes'
SELECT count(DISTINCT temporary_acting) FROM management
SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management );
SELECT DISTINCT T1.age FROM management AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes'
SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T1.head_id = T3.head_id WHERE T1.name = 'Homeland Security'
SELECT T2.name , count(*) FROM department AS T1 JOIN department AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id HAVING count(*) > 1
SELECT name , phone FROM department WHERE name LIKE '%Ha%'
SELECT count(DISTINCT rank) FROM projects
SELECT count(*) FROM department
SELECT sum(T2.hours) FROM postseason AS T1 JOIN team AS T2 ON T1.patient = T2.SSN WHERE T1.name = 'A' ORDER BY T1.Total ASC
SELECT sum(T2.hours) , T2.name FROM Scientists AS T1 JOIN department AS T2 ON T1.department_id = T2.department_id GROUP BY T1.name ORDER BY sum(T1.attendance)
SELECT number FROM company WHERE name != '300'
SELECT number FROM manufacturers WHERE name != '15-300'
SELECT TYPE FROM department ORDER BY built_year ASC
SELECT TYPE FROM ship ORDER BY built_year
SELECT avg(T2.cost) FROM assignedto AS T1 JOIN projects AS T2 ON T1.department_id = T2.department_id WHERE T1.hours > 5000
SELECT avg(T2.cost) FROM assignedto AS T1 JOIN projects AS T2 ON T1.department_id = T2.department_id WHERE T1.hours > 5000
SELECT max(num) , min(seating) FROM phone
SELECT max(seating) , min(Cows) FROM Church
SELECT count(DISTINCT Status) FROM department
SELECT count(DISTINCT name) FROM department
SELECT name FROM stadium ORDER BY home_city DESC
SELECT name FROM stadium ORDER BY home_Deaths DESC
SELECT T3.name , T3.home_city FROM home_market AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region = 'London'
SELECT T1.name , T1.home_city FROM stadium AS T1 JOIN CMI_Cross_References AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id ORDER BY count(*) DESC LIMIT 1
SELECT T3.name , T3.year FROM affected_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN storm AS T3 ON T1.storm_id = T3.storm_id
SELECT T2.name , T3.name FROM department AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.department_id JOIN head AS T3 ON T1.head = T3.head_id
SELECT T1.name FROM stadium AS T1 JOIN event AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T2.stadium_id HAVING count(*) > 1
SELECT T1.name FROM stadium AS T1 JOIN event AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T2.stadium_id HAVING count(*) > 1
SELECT T1.Time FROM stadium AS T1 JOIN assignedto AS T2 ON T1.code = T2.stadium_id GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.Time FROM stadium AS T1 JOIN assignedto AS T2 ON T1.code = T2.stadium_id GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
SELECT T2.theme FROM affected_register_Register AS T1 JOIN company AS T2 ON T1.department_id = T2.department_id WHERE T1.age > 5000
SELECT T2.theme FROM undergoes AS T1 JOIN scientists AS T2 ON T1.stadium_id = T2.track_id WHERE T1.hours >= 15
SELECT TYPE , avg(home_games) FROM department GROUP BY TYPE
SELECT TYPE , avg(market_share) FROM department GROUP BY TYPE
SELECT T1.Time FROM stadium AS T1 JOIN affected_market AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.stadium_id ORDER BY count(*)
SELECT DISTINCT gtype FROM Video_games GROUP BY gtype ORDER BY count(DISTINCT gtype) ASC
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1
SELECT DName FROM Student WHERE StuID NOT IN(SELECT StuID FROM Has_games)
SELECT Gname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.GameID WHERE T2.Gname = "Call of Widenius")
SELECT StuID FROM Student WHERE membership_amount > 1500 INTERSECT SELECT T1.StuID FROM Sportsinfo AS T1 JOIN Student_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.age < 18
SELECT gtype FROM Student WHERE ELECTION_games > 100 INTERSECT SELECT gtype FROM Video_games WHERE gtype < 'Y'
SELECT Gname FROM Student WHERE Days_games > 100 OR membership_amount < 100
SELECT Gname FROM Student WHERE Days_games > 100 OR membership_amount < 75
SELECT Census_Ranking FROM Student WHERE StuID != "2015"
SELECT Census_Ranking FROM Student EXCEPT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T2.ResTypeName = "Subway";
SELECT T1.CName FROM COURSE AS T1 JOIN Student AS T2 ON T1.FacID = T2.StuID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1;
SELECT T1.DName FROM Plays_games AS T1 JOIN Student AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY count(*) DESC LIMIT 1;
SELECT StuID FROM Student GROUP BY StuID ORDER BY count(StuID) ASC LIMIT 1
SELECT StuID FROM Student GROUP BY StuID ORDER BY count(*) ASC LIMIT 1
SELECT Fname , Lname FROM Student WHERE Fname = "Instructor"
SELECT Fname , Lname FROM Student
SELECT StuID FROM Student WHERE StuID NOT IN(SELECT StuID FROM Has_games)
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Student
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games
SELECT StuID FROM Student GROUP BY StuID HAVING count(*) > 1
SELECT StuID , StuID FROM Student INTERSECT SELECT StuID FROM Plays_games
SELECT T1.Fname FROM Student JOIN Student AS T2 ON T1.StuID = T2.StuID ORDER BY T2.dose DESC LIMIT 1
SELECT T1.Fname FROM Student JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM Student WHERE Advisor = "Massively multiplayer online"
SELECT count(*) FROM Student WHERE gtype = "Massively multiplayer online"
SELECT count(DISTINCT StuID) FROM Student WHERE Advisor = 1121
SELECT count(DISTINCT StuID) FROM Student WHERE Advisor = 1121
SELECT StuID FROM Student WHERE Fname = "Avatar"
SELECT StuID FROM Student WHERE Fname = "Avatar"
SELECT StuID FROM Student ORDER BY dateundergoes LIMIT 1
SELECT StuID FROM Student ORDER BY dateundergoes LIMIT 1
SELECT T1.Fname FROM Student JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1
SELECT T1.StuID FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1
SELECT StuID , count(*) FROM Student GROUP BY StuID
SELECT T1.StuID FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1;
SELECT T3.Fname , count(*) FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T1.StuID = T3.StuID GROUP BY T1.StuID
SELECT T1.clubname , count(*) FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
SELECT StuID FROM Student WHERE ResName = "Professor";
SELECT StuID FROM Student WHERE ResName = 1121
SELECT T2.ResName FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.ResName = "Balls to the Wall"
SELECT T2.ResName FROM Faculty AS T1 JOIN Student AS T2 ON T1.StuID = T2.advisor WHERE T1.ResName = "Balls to the Wall"
SELECT T1.id FROM student AS T1 JOIN enroll AS T2 ON T1.id = T2.project_id WHERE T2.duration = 80
SELECT T1.id FROM student AS T1 JOIN enroll AS T2 ON T1.id = T2.stu_id WHERE T2.duration = 80
SELECT T1.student_id FROM student AS T1 JOIN enroll AS T2 ON T1.stu_ID = T2.stu_id WHERE T2.duration = 'Yes'
SELECT T1.id FROM playlist_register_assignment AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.track_id WHERE T2.year = 2003 ORDER BY T2.attendance DESC LIMIT 1
SELECT DISTINCT city FROM bank
SELECT DISTINCT city FROM addresses
SELECT DISTINCT T1.city FROM addresses AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.county = 'Australia'
SELECT DISTINCT city FROM stadium
SELECT course_name FROM course ORDER BY name
SELECT name FROM course ORDER BY name
SELECT first_name FROM employees ORDER BY first_name
SELECT first_name FROM employees ORDER BY first_name
SELECT T1.id FROM student AS T1 JOIN enroll AS T2 ON T1.id = T2.project_id WHERE T2.duration = 80
SELECT T1.id FROM student AS T1 JOIN enroll AS T2 ON T1.id = T2.project_id WHERE T2.event_details = 'Movies' UNION SELECT T1.id FROM student AS T1 JOIN enroll AS T2 ON T1.s_id = T2.id WHERE T2.amenity_name = 'shopping'
SELECT T1.event_id FROM course AS T1 JOIN Student_participates_in AS T2 ON T1.course_id = T2.course_id WHERE T2.age > 90
SELECT T1.event_id FROM GRAPES AS T1 JOIN Participants_in_Events AS T2 ON T1.Ship_ID = T2.Participant_ID WHERE T2.age >= 3
SELECT * FROM faculty WHERE id NOT IN (SELECT T1.StuID FROM race AS T1 JOIN) AS T2 ON T1.id = T2.track_id WHERE T2.job = 'RAY')
SELECT * FROM faculty WHERE id NOT IN (SELECT T1.id FROM PersonFriend AS T1 JOIN playlist_items AS T2 ON T1.track_id = T2.track_id WHERE T2.event_id = 'TV Lounge')
SELECT T2.StuID FROM item AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.product_id WHERE T1.name = '2008' ORDER BY T1.registration_date
SELECT T2.StuID FROM GRAPES AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.id WHERE T1.name = 'A Puzzling Parallax' ORDER BY T1.registration_date
SELECT T2.id FROM operate_company AS T1 JOIN Video_attendance AS T2 ON T1.track_id = T2.track_id WHERE T1.year = 2003 ORDER BY T2.attendance
SELECT T1.id FROM playlist_register_company AS T1 JOIN event AS T2 ON T1.track_id = T2.track_id WHERE T2.name = 'Sponsor' ORDER BY T2.balance
SELECT Date_hire_date FROM weather WHERE max_in_G > (SELECT avg(market_share) FROM phone)
SELECT T1.date FROM employee AS T1 JOIN CLASS AS T2 ON T1.SSN = T2.ssn WHERE T2.max(T2.age) > (SELECT avg(T2.ticket_price) FROM Person)
SELECT name FROM station WHERE seating < (SELECT avg(seating) FROM track)
SELECT name FROM station WHERE seating < (SELECT avg(seating) FROM track)
SELECT city , max(market_share) FROM products GROUP BY city
SELECT name , LOCATION , LOCATION FROM track GROUP BY city
SELECT T2.name , T2.name FROM Rating AS T1 JOIN artwork AS T2 ON T1.project = T2.id ORDER BY T1.stars ASC LIMIT 3
SELECT T2.name , T2.name FROM Rating AS T1 JOIN artwork AS T2 ON T1.project = T2.id ORDER BY T1.stars ASC LIMIT 3
SELECT avg(T2.fastestlapspeed) FROM campuses AS T1 JOIN submission AS T2 ON T1.id = T2.track_id WHERE T1.year = 2004
SELECT avg(T1.stars) , T1.year FROM station AS T1 JOIN Student AS T2 ON T1.project = T2.id WHERE T2.year = 2004
SELECT T2.event_id FROM GRAPES AS T1 JOIN Student AS T2 ON T1.s_id = T2.id ORDER BY T1.duration ASC LIMIT 1
SELECT min(duration) FROM projects
SELECT sum(T1.duration) , sum(T2.duration) FROM files AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.patient GROUP BY T1.id ORDER BY sum(T2.duration) DESC LIMIT 1
SELECT sum(T1.duration) , sum(T2.duration) FROM files AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.patient GROUP BY T1.id ORDER BY sum(T2.duration) DESC LIMIT 1
SELECT zip_code , avg(mean_degree) FROM phone WHERE YEAR = 2007 GROUP BY zip_code
SELECT zip_code , avg(mean_G) , avg(market_share) FROM phone GROUP BY zip_code
SELECT count(DISTINCT driverId) FROM Faculty
SELECT count(DISTINCT bike_id) FROM management
SELECT count(DISTINCT city) FROM bank
SELECT count(DISTINCT city) FROM department
SELECT count(*) FROM gas_station WHERE LOCATION = "Nokia"
SELECT count(*) FROM products AS T1 JOIN artwork AS T2 ON T1.stadium_id = T2.cName WHERE T1.city = "Nokia Corporation"
SELECT DISTINCT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.id = T2.track_id WHERE T1.id = 1
SELECT DISTINCT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.id = T2.track_id WHERE T1.id = 1
SELECT T2.name , T2.Representative_Type FROM exhibition AS T1 JOIN artwork AS T2 ON T1.mID = T2.mID GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1
SELECT T2.name , T2.Name , T1.stars , T1.event_id FROM exhibition AS T1 JOIN artwork AS T2 ON T1.event_id = T2.playlist_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1
SELECT Investor FROM PersonFriend GROUP BY Investor ORDER BY count(*) DESC LIMIT 1
SELECT T1.electoral_register_apid FROM albums AS T1 JOIN Participants AS T2 ON T1.apid = T2.Participant_ID WHERE T2.outcome_code = 'China' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM Movie WHERE budgeted > 3000 AND YEAR > 46
SELECT count(*) FROM Movie WHERE budgeted > 3000 AND YEAR > 46
SELECT T1.name , T1.city FROM stadium AS T1 JOIN ORDER BY T2 ON T1.duration ASC LIMIT 1
SELECT T1.name , T1.lat , T1.stars FROM station AS T1 JOIN laptimes AS T2 ON T1.id = T2.track_id ORDER BY T2.Height ASC LIMIT 1
SELECT T2.id FROM Rating AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.cName WHERE T1.city = 'Brittany States' INTERSECT SELECT T2.track_id FROM exhibition AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.track_id WHERE T1.stars > 100
SELECT T2.StuID FROM Rating AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.id WHERE T1.city = 'Brittany States' INTERSECT SELECT T2.track_id FROM exhibition AS T1 JOIN has_enzyme AS T2 ON T1.station_id = T2.track_id WHERE T1.city = 'Fail'
SELECT T2.name , T2.name FROM exhibition AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.track_id WHERE T1.task > 140 OR T2.year > 14 UNION SELECT T1.name FROM exhibition AS T1 JOIN has_amenity AS T2 ON T1.station_id = T2.track_id GROUP BY T1.track_id
SELECT T2.name , T2.name FROM exhibition AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.track_id WHERE T1.year > 2000 GROUP BY T1.track_id HAVING count(*) > 14 UNION SELECT T2.name , T1.track_id FROM exhibition AS T1 JOIN has_amenity AS T2 ON T1.track_id = T2.track_id WHERE T1.task
SELECT cloud_cover FROM department WHERE zip_code = 'China' GROUP BY cloud_cover ORDER BY count(*) DESC LIMIT 3
SELECT cloud_cover FROM Invoices WHERE zip_code = 'China' GROUP BY cloud_cover ORDER BY count(*) DESC LIMIT 3
SELECT zip_code FROM Flight GROUP BY zip_code ORDER BY count(*) DESC LIMIT 1
SELECT zip_code FROM phone GROUP BY zip_code ORDER BY avg(room_count) LIMIT 1
SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT T1.id FROM products AS T1 JOIN Reviewer AS T2 ON T1.id = T2.track_id WHERE T2.city = 'Protoporphyrinogen IX')
SELECT avg(bikes_available) FROM status WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN products AS T2 ON T1.stuid = T2.stuid WHERE T2.city = 'Brittany Harris')
SELECT avg(T2.track_id) FROM exhibition AS T1 JOIN track AS T2 ON T1.project = T2.id WHERE T1.stars > 100
SELECT avg(T2.track_id) FROM exhibition AS T1 JOIN track AS T2 ON T1.project_id = T2.track_id WHERE T1.stars > 10 GROUP BY T2.name HAVING count(T1.track_id) > 10
SELECT T1.Year , T1.zip_postcode FROM phone AS T1 JOIN Student AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.age >= 80
SELECT T2.location , T1.date FROM Faculty AS T1 JOIN Student AS T2 ON T1.id = T2.campus WHERE T1.stars >= 80
SELECT T2.id FROM Rating AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.mID GROUP BY T1.i_id HAVING avg(T1.stars) > 60
SELECT T1.zip_code , T2.rank FROM Rating AS T1 JOIN papers AS T2 ON T1.paperid = T2.paperid WHERE T1.stars > 100 GROUP BY T1.mID
SELECT zip_code , count(*) FROM phone GROUP BY zip_code
SELECT zip_code , count(*) FROM phone WHERE county = 'China' GROUP BY zip
SELECT Date_of_weather WHERE min_dew_f < (SELECT min(used_dew_point_f) FROM phone)
SELECT Date_of_ceremony FROM ship WHERE zip_code = 'Credit-01-(15)
SELECT T1.id , T2.installation_date FROM GRAPES AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.track_id
SELECT T1.id , T2.name FROM playlist_register_company AS T1 JOIN course AS T2 ON T1.track_id = T2.track_id
SELECT T2.T1.campus FROM GRAPES AS T1 JOIN projects AS T2 ON T1.id = T2.track_id ORDER BY T1.attendance DESC LIMIT 1
SELECT T2.id FROM assignedto AS T1 JOIN projects AS T2 ON T1.id = T2.track_id WHERE T1.rank = (SELECT max(T1.stars) FROM Has_Buildings AS T1 JOIN PersonFriend AS T2 ON T1.company_id = T2.track_id ORDER BY T1.attendance DESC LIMIT 1)
SELECT count(*) FROM products AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.city != 'California'
SELECT count(*) FROM products WHERE name NOT IN ( SELECT T1.id FROM teaches AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.name WHERE T2.city = 'Procrastin-X' )
SELECT shipping_NUM FROM Flight WHERE LOCATION != "Fog" AND EVENTS != "!= "Rain"
SELECT Date_hire_date FROM weather WHERE zip_code = 94107 AND EVENTS != 'No-06-23-23-23-23-02:54'
SELECT T2.id FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.id = T2.track_id WHERE T1.stars = 1 EXCEPT SELECT T1.name FROM Rating AS T1 JOIN PersonFriend AS T2 ON T1.rID = T2.rID WHERE T1.stars = 1
SELECT id FROM station WHERE seating > 37.5 EXCEPT SELECT T1.id FROM Rating AS T1 JOIN department AS T2 ON T1.id = T2.track_id WHERE T2.city = 'Brittany Harris'
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.id = T2.track_id WHERE T1.year = 2004 EXCEPT SELECT T2.name FROM Rating AS T1 JOIN PersonFriend AS T2 ON T1.track_id = T2.track_id WHERE T1.city = 'London'
SELECT T2.name , T2.name FROM exhibition AS T1 JOIN track AS T2 ON T1.station_id = T2.track_id GROUP BY T1.track_id HAVING count(*) >= 2 EXCEPT SELECT T1.name , T1.name FROM Rating AS T1 JOIN PersonFriend AS T2 ON T1.track_id = T2.track_id JOIN PersonFriend AS T3 ON T1.id = T2.track_id WHERE T3.city = 'London'
SELECT T2.name , T2.city , T1.stars FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.id = T2.track_id ORDER BY T1.stars LIMIT 1
SELECT T1.name , T1.lat , T1.year FROM station AS T1 JOIN Movie AS T2 ON T1.employeeid = T2.physician ORDER BY T2.age LIMIT 1
SELECT rank , YEAR FROM WINE ORDER BY ticket_price DESC LIMIT 3
SELECT rank , YEAR FROM phone ORDER BY budget ASC LIMIT 3
SELECT name , COUNT(*) FROM gas_station GROUP BY city HAVING count(*) >= 15
SELECT T2.name , count(*) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.id = T2.track_id GROUP BY T1.stadium_id HAVING count(*) >= 15
SELECT T1.event_id , T2.name FROM exhibition AS T1 JOIN event AS T2 ON T1.project_id = T2.project_id GROUP BY T2.project_id HAVING count(*) >= 200
SELECT T1.event_id , T1.name FROM Projects AS T1 JOIN event AS T2 ON T1.event_id = T2.src_num GROUP BY T1.project_id HAVING count(*) >= 1
SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles) < 10
SELECT zip_code FROM WINE GROUP BY zip_code HAVING avg(mean_working) < 10
SELECT city FROM gas ORDER BY max(age) DESC
SELECT city FROM projects ORDER BY age DESC
SELECT T1.Date_Claim_Made , T1.part_name FROM papers AS T1 JOIN department AS T2 ON T1.machine_id = T2.department_id ORDER BY T2.ticket_price DESC LIMIT 5
SELECT Date , cloud_cover FROM department ORDER BY cloud_cover DESC LIMIT 5
SELECT Grape , event_id FROM projects ORDER BY White DESC LIMIT 3
SELECT Grape , event_id FROM projects ORDER BY White DESC LIMIT 3
SELECT T2.name , T2.balance , T1.job FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code GROUP BY T2.name
SELECT T2.name , T2.name , T1.credits , T1.job FROM exhibition AS T1 JOIN event AS T2 ON T1.project = T2.code GROUP BY T1.name
SELECT T1.name , T1.age , T1.city , T2.job FROM exhibition AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name GROUP BY T2.name
SELECT T1.name , T1.credits , T2.job FROM GRAPES AS T1 JOIN department AS T2 ON T1.project = T2.code GROUP BY T2.name
SELECT DISTINCT T2.name FROM GRAPES AS T1 JOIN Reviewer AS T2 ON T1.id = T2.project WHERE T1.duration < 100
SELECT DISTINCT T2.name FROM GRAPES AS T1 JOIN event AS T2 ON T1.id = T2.project_id WHERE T1.duration < 100
SELECT DISTINCT zip_code FROM phone EXCEPT SELECT T1.zip_code FROM phone AS T1 JOIN phone AS T2 ON T1.f_id = T2.zip_code WHERE T2.number = 'Fail'
SELECT DISTINCT zip_code FROM phone EXCEPT SELECT DISTINCT zip_code FROM phone WHERE max_dew_f >= 70
SELECT T2.event_id FROM GRAPES AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T1.Color = 'White'
SELECT T2.event_id FROM GRAPES AS T1 JOIN event AS T2 ON T1.project_id = T2.id WHERE T1.rank = (SELECT max(duration) FROM projects)
SELECT T1.date FROM stay AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.level BETWEEN 'Elsa' AND T2.head'
SELECT T1.date FROM stay AS T1 JOIN routes AS T2 ON T1.jobcode = T2.custid WHERE T2.level = 'Research' AND T2.points BETWEEN 3.5
SELECT date_of_latest_revision , min(market_share) FROM Student WHERE job = 'engineer'
SELECT T1.date , T1.max(T2.active_in_G) FROM phone AS T1 JOIN phone AS T2 ON T1.Stay = T2.f_id ORDER BY T1.age LIMIT 1
SELECT DISTINCT T1.id , T2.country FROM exhibition AS T1 JOIN phone AS T2 ON T1.alid = T2.alid WHERE T2.country = 'Bob'
SELECT DISTINCT T1.name , T2.friend FROM exhibition AS T1 JOIN phone AS T2 ON T1.alid = T2.alid WHERE T2.country = 'Bob'
SELECT zip_code FROM weather GROUP BY zip_code HAVING count(*) >= 100
SELECT zip_code FROM weather GROUP BY zip_code HAVING count(*) >= 2
SELECT T1.name FROM station AS T1 JOIN assignedto AS T2 ON T1.code = T2.stadium_id GROUP BY T2.stadium_id HAVING count(*) > 100
SELECT T1.name FROM station AS T1 JOIN assignedto AS T2 ON T1.code = T2.stadium_id GROUP BY T2.name HAVING count(*) >= 2
SELECT count(*) FROM products AS T1 JOIN projects AS T2 ON T1.project = T2.code WHERE T1.city = 'Accounting' AND T2.SSN = 'RAY'
SELECT count(*) FROM projects AS T1 JOIN projects AS T2 ON T1.project = T2.code WHERE T1.city = 'Accounting' AND T2.SSN = 'Smith'
SELECT avg(T1.age) , T1.name FROM station AS T1 JOIN assignedto AS T2 ON T1.code = T2.project
SELECT avg(T1.age) , T1.name FROM station AS T1 JOIN management AS T2 ON T1.department_id = T2.project
SELECT count(*) FROM Rooms
SELECT * FROM department ORDER BY Region ASC
SELECT Famous_Title FROM department ORDER BY founded
SELECT title FROM item WHERE Team != '2016-21'
SELECT title , job FROM Rooms
SELECT Date FROM projects ORDER BY date DESC
SELECT DISTINCT rank FROM Rooms WHERE price > (SELECT avg(basePrice) FROM phone)
SELECT * FROM Movie ORDER BY max(ticket_price) DESC LIMIT 1
SELECT date FROM Movie ORDER BY basePrice ASC LIMIT 3
SELECT T1.title , T1.date FROM Movie AS T1 JOIN assignedto AS T2 ON T1.facID = T2.emp_id
SELECT T1.name FROM airlines AS T1 JOIN assignedto AS T2 ON T1.id = T2.alid GROUP BY T1.name HAVING count(*) > 1
SELECT T1.title FROM course AS T1 JOIN assignedto AS T2 ON T1.custid = T2.RoomId ORDER BY T2.balance DESC
SELECT count(*) FROM Rooms GROUP BY publisher HAVING count(*) > 1
SELECT count(*) , count(*) FROM scientists GROUP BY Investor
SELECT T2.balance FROM undergoes AS T1 JOIN WINE AS T2 ON T1.custid = T2.custid GROUP BY T1.church_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.name FROM airlines AS T1 JOIN assignedto AS T2 ON T1.alid = T2.alid GROUP BY T1.name HAVING count(*) > 1
SELECT title FROM course WHERE course_id NOT IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN department AS T2 ON T1.department_id = T2.department_id WHERE T2.school_id = 'China')
SELECT count(*) FROM Rooms WHERE price > 300 INTERSECT SELECT T1.text FROM papers AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.friend = 'John Anthony'
SELECT count(DISTINCT YEAR) FROM Movie
SELECT count(DISTINCT T1.date) FROM Movie AS T1 JOIN phone AS T2 ON T1.custid = T2.custid
SELECT creation FROM department WHERE name = 'Cuba' OR LOCATION = 'Argentina'
SELECT count(*) FROM editor
SELECT count(*) FROM Rooms
SELECT name FROM student ORDER BY name
SELECT name FROM Projects ORDER BY name
SELECT Character , Duration FROM department
SELECT Character , Duration FROM candidate
SELECT name FROM people WHERE age != (SELECT min(age) FROM person WHERE country = 'S')
SELECT name FROM student WHERE first_name NOT IN (SELECT name FROM lives_in)
SELECT Character FROM faculty ORDER BY age DESC
SELECT Character FROM people ORDER BY age
SELECT max(market_date) FROM projects ORDER BY age LIMIT 1
SELECT max(T2.fastestlapspeed) FROM Person AS T1 JOIN people AS T2 ON T1.male = T2.Editor_ID ORDER BY T1.age DESC LIMIT 1
SELECT T2.Name FROM APPELLATIONs AS T1 JOIN PersonFriend AS T2 ON T1.event_id = T2.event_id WHERE T1.formats = 'Bob'
SELECT T2.name FROM GRAPES AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.event_id WHERE T1.name = 'Bob'
SELECT DISTINCT * FROM phone WHERE first_name != 'PROF'
SELECT DISTINCT T1.stuid FROM GRAPES AS T1 JOIN PersonFriend AS T2 ON T1.code = T2.master_id WHERE T2.outcome_code != 'No drive'
SELECT T1.name , T1.age FROM stadium AS T1 JOIN routes AS T2 ON T1.apid = T2.src_ID
SELECT T1.name , T1.age FROM stadium AS T1 JOIN routes AS T2 ON T1.Patient = T2.SSN
SELECT T1.name FROM dorm AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T2.name = 'Balls to'
SELECT T1.name FROM dorm AS T1 JOIN routes AS T2 ON T1.Patient = T2.SSN WHERE T2.name = 'Bob'
SELECT T1.name FROM student AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T2.decision = 'China' ORDER BY T2.balance DESC
SELECT T1.name FROM student AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T2.decision = 'China' ORDER BY T2.balance DESC
SELECT T2.name , count(*) FROM accounts AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name GROUP BY T1.name
SELECT T1.name , count(*) FROM stadium AS T1 JOIN assignedto AS T2 ON T1.code = T2.EmployeeID GROUP BY T1.name
SELECT T2.name FROM Person AS T1 JOIN department AS T2 ON T1.event_id = T2.department_id GROUP BY T1.event_id HAVING count(*) >= 3
SELECT T2.name FROM membership_register_Register AS T1 JOIN scientists AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID GROUP BY T1.track_ID HAVING count(*) >= 3
SELECT Nominee , count(*) FROM happy_hour GROUP BY Nominee
SELECT Investor , count(*) FROM happy_hour GROUP BY Investor
SELECT Nominee FROM happy_hour GROUP BY Nominee ORDER BY count(*) DESC LIMIT 1
SELECT Nominee FROM happy_hour GROUP BY Nominee ORDER BY count(*) DESC LIMIT 1
SELECT RESULT FROM happy_hour GROUP BY main_Jerk DESC LIMIT 1
SELECT TYPE FROM happy_hour GROUP BY main_cross_ID ORDER BY count(*) DESC LIMIT 1
SELECT Nominee FROM happy_hour GROUP BY Nominee HAVING count(*) > 2
SELECT Nominee FROM happy_hour GROUP BY Nominee HAVING count(*) > 2
SELECT T2.name FROM membership_register_Register AS T1 JOIN member AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID
SELECT Name FROM track WHERE Wrestler_ID NOT IN (SELECT track_id FROM membership_register_colors)
SELECT Nominee FROM SECTION WHERE zip_code = 'Fall' INTERSECT SELECT Nominee FROM Drama_cross_references WHERE zip_code = 'Psychology'
SELECT Nominee FROM scientists WHERE Award = 'Award' INTERSECT SELECT Nominee FROM shop WHERE Award = 'Walter Hill'
SELECT T2.council_tax_id FROM mailshot_register_Register AS T1 JOIN scientists AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T1.Time_of_card = '2005-01-X'
SELECT T2.Author FROM SportsInfo AS T1 JOIN scientists AS T2 ON T1.master_id = T2.master_id WHERE T1.Time = "Simon Woodroffe" OR T1.Time = "Lacrosse"
SELECT email FROM people WHERE address = 'Email'
SELECT partitionid FROM happy_hour WHERE name = 'Iron Man'
SELECT count(*) FROM scientists
SELECT count(*) , sum(hours) FROM member GROUP BY CLASS
SELECT count(*) , sum(hours) FROM projects GROUP BY CLASS
SELECT count(*) FROM Church
SELECT count(DISTINCT UID) FROM happy_cross_ID
SELECT email , phone FROM people WHERE name LIKE '%Ha%'
SELECT DISTINCT T2.Name FROM SportsInfo AS T1 JOIN people AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T1.email = 'LINDA'
SELECT text FROM happy_by WHERE text = '15'
SELECT T2.name , T2.email FROM membership_register_people AS T1 JOIN people AS T2 ON T1.master_id = T2.master_customer_id WHERE T1.Total > 1000
SELECT name FROM people WHERE Num_of_Audience > 300
SELECT T2.name , T2.email FROM race AS T1 JOIN people AS T2 ON T1.ssn = T2.people_id GROUP BY T1.workshop_id HAVING count(*) > 1
SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist = T2.ssn GROUP BY T2.patient HAVING count(*) > 1
SELECT T2.master_id FROM assignedto AS T1 JOIN scientists AS T2 ON T1.master_staff_id = T2.master_id WHERE T1.name = 'Matter' INTERSECT SELECT T2.council_ID FROM schedule AS T1 JOIN projects AS T2 ON T1.project = T2.code WHERE T2.name = 'A Puzzling Parallax'
SELECT T2.master_id FROM membership_register_Register AS T1 JOIN people AS T2 ON T1.master_staff_id = T2.master_id WHERE T1.name = 'Michael Time' OR T1.name = 'HBS'
SELECT T2.name FROM assignedto AS T1 JOIN people AS T2 ON T1.scientist = T2.SSN GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1
SELECT name , LOCATION FROM scientists ORDER BY email ASC LIMIT 1
SELECT T2.name , count(*) FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id GROUP BY T1.member_id ORDER BY count(*) DESC
SELECT name FROM scientists ORDER BY hours DESC LIMIT 5
SELECT text FROM happy_hour ORDER BY createdate
SELECT T2.name , count(*) FROM assignedto AS T1 JOIN scientists AS T2 ON T1.Member_ID = T2.Member_ID GROUP BY T2.Author
SELECT T2.name , T2.partitionid FROM happy_hour AS T1 JOIN company AS T2 ON T1.uid = T2.track_id GROUP BY T2.Host_HAVING count(*) < 1
SELECT T2.name , count(*) FROM affiliated_with AS T1 JOIN Organisations AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T2.track_id HAVING count(*) > 1
SELECT avg(patient) FROM Projects
SELECT avg(T1.amount) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.outcome_code = 'Photo'
SELECT max(Num_of_quantity) , sum(damage) FROM phone
SELECT T2.Name FROM Faculty AS T1 JOIN editor AS T2 ON T1.Manufacturer = T2.code
SELECT DISTINCT name FROM actor
SELECT T1.attribute_data_type FROM Attribute_Definitions AS T1 JOIN CMI_Cross_References AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T1.data_type HAVING count(*) > 3
SELECT T1.attribute_data_type FROM Attribute_Definitions AS T1 JOIN CMI_Cross_References AS T2 ON T1.Wrestler_ID = T2.screen_cross_ID GROUP BY T1.TYPE HAVING count(*) > 3
SELECT T1.attribute_data_type FROM Attribute_Arrears AS T1 JOIN Documents AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T2.interaction_type = 'Marriage'
SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = 'Green'
SELECT T2.name , T2.prof_office FROM Rating AS T1 JOIN Movie AS T2 ON T1.Furniture_ID = T2.Wrestler_ID WHERE T1.15 BETWEEN 5 AND 15
SELECT T2.name , T2.date , T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.Debate_ID = T2.Debate_ID WHERE T1.used_level BETWEEN 10 AND 15
SELECT DISTINCT title FROM phone WHERE title LIKE '%Smith%'
SELECT DISTINCT publisher FROM catalogs WHERE title LIKE '%en%'
SELECT DISTINCT source FROM department ORDER BY basePrice DESC LIMIT 1
SELECT product FROM department ORDER BY basePrice DESC LIMIT 1
SELECT T2.name , T2.date FROM publication AS T1 JOIN journal AS T2 ON T1.master_id = T2.<unk> WHERE T1.stars > 15 GROUP BY T1.name HAVING count(*) > 1
SELECT T2.name , T2.date FROM publication AS T1 JOIN journal AS T2 ON T1.master_id = T2.master_id WHERE T1.stars > 3
SELECT T1.name FROM stay AS T1 JOIN event AS T2 ON T1.event_id = T2.department_id JOIN student AS T3 ON T2.Stay = T3.FROM screen_cross = T3.Graphics_ID WHERE T3.Type = 'ExxonMobil'
SELECT T1.name FROM course AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN student AS T3 ON T2.Stay = T3.FROM screen_cross_cross = T3.Graphics_ID ORDER BY T3.Number_Deaths DESC LIMIT 1
SELECT T1.name FROM product AS T1 JOIN projects AS T2 ON T1.product_id = T2.product_id JOIN savings AS T3 ON T1.product_id = T3.product_id WHERE T3.max(T3.Price) = 'King'
SELECT name FROM actor ORDER BY price DESC LIMIT 1
SELECT T2.Hardware_Name FROM publication AS T1 JOIN projects AS T2 ON T1.school_id = T2.department_id JOIN head AS T3 ON T1.journalist_id = T3.journalist_id ORDER BY T3.cost ASC LIMIT 1
SELECT T2.Hardware_level_name FROM publication AS T1 JOIN department AS T2 ON T1.product_id = T2.product_id ORDER BY T1.price ASC LIMIT 1
SELECT avg(price) , min(ticket_price) , max(ticket_price) FROM products
SELECT avg(price) , min(ticket_price) , max(ticket_price) FROM products GROUP BY product
SELECT product FROM projects ORDER BY Height DESC LIMIT 1
SELECT name FROM editor ORDER BY market_date DESC LIMIT 1
SELECT T3.name FROM products AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id JOIN CHARACTERISTICS AS T3 ON T1.journalist_ID = T3.journalist_ID WHERE T2.region = 'Denmark'
SELECT name FROM editor ORDER BY Height ASC LIMIT 1
SELECT T2.name FROM products AS T1 JOIN projects AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name LIKE '15%'
SELECT T2.name FROM products AS T1 JOIN projects AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name LIKE 'World 'World Lounge'
SELECT T2.name FROM undergoes AS T1 JOIN event AS T2 ON T1.Manufacturer = T2.code WHERE T1.level = 'King'
SELECT T2.name FROM undergoes AS T1 JOIN event AS T2 ON T1.Manufacturer = T2.code WHERE T1.level = 'stay'
SELECT T2.name FROM product AS T1 JOIN projects AS T2 ON T1.product_id = T2.project WHERE T1.stars > 3 OR T1.age > 100
SELECT name FROM projects WHERE regional_population > 300 OR hire_cost < 100
SELECT T1.event_name , T1.event_id FROM Attribute_Definitions AS T1 JOIN CMI_Cross_References AS T2 ON T1.medicine_id = T2.MediaTypeId GROUP BY T1.MediaTypeId ORDER BY count(*) DESC LIMIT 1
SELECT T1.attribute_name , T1.task_id FROM Attribute_Definitions AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN driver AS T3 ON T1.s_id = T3.id WHERE T3.feature_details = 'ExxonMobil'
SELECT name , capacity FROM editor WHERE seating > 100
SELECT name , price FROM products WHERE price > 300
SELECT Date FROM Movie GROUP BY date HAVING count(*) > 1
SELECT Date FROM employee GROUP BY date HAVING count(*) > 1
SELECT count(*) FROM products
SELECT sum(market_share) FROM department
SELECT product FROM projects WHERE hours > 200
SELECT T2.name FROM playlist_market AS T1 JOIN projects AS T2 ON T1.project = T2.id WHERE T1.amount > 200
SELECT count(*) FROM department
SELECT count(*) FROM department
SELECT name , LOCATION FROM Products WHERE seating > 100
SELECT name , seating FROM editor
SELECT T2.product FROM item AS T1 JOIN event AS T2 ON T1.Manufacturer = T2.code WHERE T1.name = 'John Lounge'
SELECT product_id FROM Documents WHERE seating > 3000
SELECT count(*) FROM products WHERE product BETWEEN 'F' AND 15
SELECT count(*) FROM projects WHERE hours BETWEEN= 15 AND 3000
SELECT name , service_id FROM projects WHERE primaryaffiliation = 1
SELECT T2.name , T2.friend FROM Certificate AS T1 JOIN editor AS T2 ON T1.project = T2.id WHERE T1.id = 'Yes'
SELECT max(market_share) , min(market_share) , max(market_share) FROM department
SELECT max(market_share) , min(market_share) , max(market_share) FROM phone
SELECT T2.name , T2.name FROM Certificate AS T1 JOIN editor AS T2 ON T1.project = T2.code GROUP BY T1.project ORDER BY count(*) DESC LIMIT 1
SELECT T2.product_id , T2.name FROM Certificate AS T1 JOIN Projects AS T2 ON T1.department_id = T2.department_id GROUP BY T2.dept_name ORDER BY count(*) DESC LIMIT 1
SELECT name FROM department ORDER BY regional_population ASC LIMIT 3
SELECT T2.name FROM affected_actor AS T1 JOIN department AS T2 ON T1.department_id = T2.department_id ORDER BY T1.stars ASC LIMIT 3
SELECT name FROM track WHERE market_share > 200
SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.Manufacturer = T2.code WHERE T1.rank > 200
SELECT count(*) FROM employee
SELECT count(*) FROM department
SELECT name , salary FROM instructor ORDER BY salary ASC
SELECT name , salary FROM instructor ORDER BY salary
SELECT * FROM employees WHERE market_amount > 10
SELECT T1.event_id FROM Projects AS T1 JOIN event AS T2 ON T1.cmi_ID = T2.Artwork_ID GROUP BY T1.cmi_ID HAVING count(*) >= 1
SELECT count(*) FROM employee WHERE salary BETWEEN 2016 AND 12000
SELECT count(*) FROM employee WHERE salary BETWEEN (SELECT min(salary) FROM staff WHERE 2500
SELECT name , salary FROM instructor WHERE salary = 24
SELECT T1.Name , T2.salary FROM Scientists AS T1 JOIN people AS T2 ON T1.eid = T2.eid JOIN student AS T3 ON T1.Affirmative = T3.People_ID WHERE T3.Name = 'Yes'
SELECT avg(salary) , max(salary) FROM instructor
SELECT avg(salary) , max(salary) FROM instructor GROUP BY name
SELECT T1.event_id , T2.council_tax_id FROM Scientists AS T1 JOIN phone AS T2 ON T1.cmi_ID = T2.cmi_cross_ID
SELECT T1.event_id , T2.council_tax_id FROM stay AS T1 JOIN phone AS T2 ON T1.cmi_ID = T2.Editor_ID ORDER BY T1.council_tax_id DESC LIMIT 1
SELECT name FROM staff ORDER BY salary ASC LIMIT 3
SELECT name FROM Employee WHERE manager = 'Comp'
SELECT T1.Name FROM Employee AS T1 JOIN lives_in AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Name HAVING avg(T2.salary) > 1
SELECT T1.name FROM Employee AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN dorm AS T3 ON T1.cmi_ID = T3.StuID WHERE T3.salary > 6000
SELECT T1.cmi_ID , T2.name FROM Person AS T1 JOIN phone AS T2 ON T1.Debate_ID = T2.Debate_ID WHERE T2.name = 'Mark Young'
SELECT T1.problem_id , T2.salary FROM Scientists AS T1 JOIN phone AS T2 ON T1.cmi_ID = T2.Graphics_ID WHERE T2.name = 'PU_MAN'
SELECT count(*) FROM Flight
SELECT count(*) FROM department
SELECT flno , LOCATION FROM wrestler ORDER BY open_year
SELECT flno , location , LOCATION FROM wrestler ORDER BY open_year
SELECT flno FROM Flight WHERE unavailable = 255
SELECT count(*) FROM program WHERE LOCATION = 'Lamberton'
SELECT creation FROM manufacturers WHERE creation = 'James'
SELECT creation FROM manufacturers WHERE destination = 'James'
SELECT date , theme , arrival_date FROM projects WHERE LOCATION = 'Black'
SELECT departure_date , arrival_date FROM Church WHERE open_year = 2007 AND 2007
SELECT T2.flno FROM affected_register_company AS T1 JOIN wrestler AS T2 ON T1.school_id = T2.master_id WHERE T1.age > 2000
SELECT count(*) FROM Church WHERE open_date > 300
SELECT avg(price) FROM products WHERE LOCATION = 'Beijing'
SELECT avg(price) FROM products WHERE zip_code = 'Chicago' AND LOCATION = '2007'
SELECT name , LOCATION FROM department WHERE price > 300
SELECT name , LOCATION FROM journalist WHERE cost > 300
SELECT flno , Height FROM projects ORDER BY ticket_price DESC LIMIT 1
SELECT flno , Height FROM wrestler ORDER BY price DESC LIMIT 1
SELECT T2.flno FROM membership_register_Register AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.code ORDER BY T1.White ASC LIMIT 3
SELECT flno FROM stay ORDER BY duration ASC LIMIT 1
SELECT avg(price) , avg(ticket_price) , avg(ticket_price) FROM department WHERE LOCATION = 'Glasgow'
SELECT avg(price) , avg(ticket_price) , avg(ticket_price) FROM department WHERE LOCATION = 'Glasgow'
SELECT origin , count(*) FROM manufacturers GROUP BY origin
SELECT count(*) , count(*) FROM gas_station GROUP BY origin
SELECT destination , count(*) FROM company GROUP BY founder
SELECT destination , count(*) FROM company GROUP BY founder
SELECT origin FROM department GROUP BY origin ORDER BY count(*) DESC LIMIT 1
SELECT LOCATION FROM gas_station GROUP BY origin ORDER BY count(*) DESC LIMIT 1
SELECT creation FROM department GROUP BY headquarters ORDER BY count(*) LIMIT 1
SELECT headquarters FROM department GROUP BY headquarters ORDER BY count(*) LIMIT 1
SELECT T2.name FROM GRAPES AS T1 JOIN department AS T2 ON T1.Manufacturer = T2.code WHERE T1.flno = 111
SELECT T2.name FROM assignedto AS T1 JOIN event AS T2 ON T1.Manufacturer = T2.code WHERE T1.name = 'Bob'
SELECT T2.Author FROM products AS T1 JOIN scientists AS T2 ON T1.Manufacturer = T2.code WHERE T1.name = "A Smith" GROUP BY T2.Author ORDER BY count(*) DESC LIMIT 1
SELECT T2.Author FROM products AS T1 JOIN scientists AS T2 ON T1.Manufacturer = T2.code WHERE T1.name = 'A Puzzling Parallax'
SELECT T2.name , count(*) FROM train_market AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T1.name
SELECT T2.name , count(*) FROM assignedto AS T1 JOIN event AS T2 ON T1.id = T2.Manufacturer GROUP BY T2.code
SELECT T2.name FROM playlist_register_EmployeeID AS T1 JOIN physician AS T2 ON T1.exhibition = T2.EmployeeID GROUP BY T1.track_id HAVING count(*) >= 2
SELECT T2.name FROM GRAPES AS T1 JOIN stadium AS T2 ON T1.stadium = T2.code GROUP BY T1.name HAVING count(*) >= 2
SELECT count(DISTINCT *) FROM employee
SELECT count(DISTINCT client_of_component) FROM WINE
SELECT * FROM employee WHERE CLASS = 'History'
SELECT * FROM employee WHERE CLASS = 'History'
SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.branch = T2.stadium_id JOIN department AS T3 ON T3.head = T2.playlist_ID WHERE T1.name = 'John Wen'
SELECT T3.name FROM physician AS T1 JOIN event AS T2 ON T1.stadium = T2.stadium_id JOIN head AS T3 ON T3.Stay = T3.SongId WHERE T1.name = 'John Williams'
SELECT T2.name FROM Performance AS T1 JOIN Band AS T2 ON T1.Physician = T2.EmployeeID
SELECT T1.name FROM Employee AS T1 JOIN prescribes AS T2 ON T1.ID = T2.physician JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Matter of Time'
SELECT T1.name FROM Employee AS T1 JOIN medicine_enzyme_compatible_pct AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T3.screen_ID = T2.StuID WHERE T3.Name = 'Matter. Time' INTERSECT SELECT T1.name FROM Employee AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T1.s_id = T3.ID WHERE T3.name = 'A Puzzling Parallax'
SELECT T1.name FROM physician AS T1 JOIN event AS T2 ON T1.id = T2.EmployeeID JOIN scientists AS T3 ON T1.Ship_ID = T3.ID WHERE T3.Name = 'Matter of Time' INTERSECT SELECT T1.name FROM Employee AS T1 JOIN enroll AS T2 ON T1.project = T2.id JOIN injury_outcomes AS T3 ON T1.project = T2.code WHERE T3.name = 'A Puzzling Parallax'
SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN enroll AS T2 ON T1.eid = T2.track_id JOIN head AS T3 ON T3.head = T2.id WHERE T3.name = 'Movies'
SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN tryout AS T2 ON T1.eid = T2.track_id JOIN gas_station AS T3 ON T2.station_id = T3.station_id WHERE T3.manager = 'ExxonMobil'
SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T2.track_id ORDER BY count(*) DESC LIMIT 1
SELECT T2.name FROM Certificate AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T2.track_id ORDER BY count(*) DESC LIMIT 1
SELECT T2.name FROM Certificate AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id WHERE T1.year > 5000 GROUP BY T2.track_id ORDER BY count(*) DESC
SELECT T2.name FROM Certificate AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id WHERE T1.year > 5000 GROUP BY T2.track_id HAVING count(*) >= 2
SELECT T1.name , T1.salary FROM Employee AS T1 JOIN enroll AS T2 ON T1.eid = T2.patient GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.name , T1.salary FROM player AS T1 JOIN assignedto AS T2 ON T1.EmployeeID = T2.nurse GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.name , T1.salary FROM instructor AS T1 JOIN Certificate AS T2 ON T1.eid = T2.track_id JOIN head AS T3 ON T3.head_id = T2.playlist_id WHERE T3.seating > 100 GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1
SELECT T1.name , T1.salary FROM drivers AS T1 JOIN Certificate AS T2 ON T1.eid = T2.EmployeeID JOIN department AS T3 ON T2.track_id = T3.track_id WHERE T3.Sales > 5000 GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1
SELECT count(DISTINCT TYPE) FROM department
SELECT count(DISTINCT TYPE) FROM department
SELECT count(DISTINCT TYPE) FROM department
SELECT count(DISTINCT TYPE) FROM department
SELECT DISTINCT TYPE FROM department
SELECT DISTINCT TYPE FROM department
SELECT TYPE , LOCATION FROM department
SELECT TYPE , LOCATION FROM department
SELECT DISTINCT TYPE FROM vocals
SELECT DISTINCT T1.name FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.interaction_type = 'Marriage'
SELECT TYPE FROM department WHERE TYPE = 'King'
SELECT TYPE FROM department WHERE dept_name = "Cat"
SELECT count(DISTINCT TYPE) FROM department
SELECT count(*) FROM Ref_Type WHERE bedType = 'lead'
SELECT TYPE , count(*) FROM department GROUP BY TYPE
SELECT TYPE , count(*) FROM vocals AS T1 JOIN company AS T2 ON T1.department_id = T2.company_id GROUP BY T1.type
SELECT TYPE FROM department GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1
SELECT TYPE FROM department GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1
SELECT TYPE FROM department GROUP BY TYPE ORDER BY count(*) ASC LIMIT 1
SELECT TYPE FROM department GROUP BY TYPE ORDER BY count(*) ASC LIMIT 1
SELECT count(DISTINCT s_id) FROM management
SELECT count(*) FROM department
SELECT name , Lname FROM employees WHERE name = 'm'
SELECT DISTINCT T1.first_name , T1.last_name FROM player AS T1 JOIN management AS T2 ON T1.department_id = T2.player_id
SELECT count(DISTINCT advisor) FROM track
SELECT count(DISTINCT advisor) FROM department
SELECT DISTINCT name FROM track
SELECT DISTINCT TYPE FROM ship
SELECT DISTINCT city FROM college
SELECT DISTINCT city FROM college
SELECT phone_number , name FROM phone WHERE Sex = 'F'
SELECT name , Age FROM people WHERE Sex = 'F'
SELECT id FROM Student WHERE Sex = 'M'
SELECT T2.StuID FROM race AS T1 JOIN people AS T2 ON T1.class_code = T2.class_code WHERE T1.year = 2002
SELECT count(*) FROM customers
SELECT count(*) FROM market WHERE age = 25
SELECT StuID FROM captain WHERE age > (SELECT avg(age) FROM player)
SELECT T1.id FROM student AS T1 JOIN enroll AS T2 ON T1.id = T2.stu_id WHERE T2.age >= 20
SELECT city FROM college WHERE state = 'Lname'
SELECT city FROM phone WHERE email = 'Barton'
SELECT appointmentid FROM Student WHERE CLASS = 1121
SELECT T1.id FROM race AS T1 JOIN enroll AS T2 ON T1.id = T2.track_id WHERE T2.enroll = 10
SELECT count(*) FROM customers AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T1.name = 'Australia' OR T2.city = 'Atlanta'
SELECT count(*) FROM market AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T1.name = 'USA' OR T2.city = 'Billund Airport'
SELECT max(age) , min(age) , max(age) FROM editor
SELECT max(age) , max(age) , max(age) FROM phone
SELECT name FROM employees WHERE birth_year = (SELECT min(age) FROM phone)
SELECT name FROM manager WHERE Sex = 'F'
SELECT id FROM manager ORDER BY Age DESC LIMIT 1
SELECT T1.member_id FROM player AS T1 JOIN manufacturers AS T2 ON T1.player_id = T2.player_id WHERE T2.year = (SELECT max(age) FROM player)
SELECT count(*) , sum(market_share) , count(market_share) FROM department GROUP BY city
SELECT count(*) , sum(age) FROM student GROUP BY manager_id
SELECT LOCATION FROM enzyme GROUP BY name ORDER BY count(*) DESC LIMIT 1
SELECT Stories FROM enzyme ORDER BY Height DESC LIMIT 1
SELECT county , count(*) FROM stadium GROUP BY county
SELECT count(*) , T1.name FROM STUDENT AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id GROUP BY T1.id
SELECT avg(T1.age) , T1.gender FROM architect AS T1 JOIN medicine AS T2 ON T1.architect_id = T2.id WHERE T2.gender = 'female'
SELECT avg(market_share) , min(market_share) , gender FROM employees WHERE gender = 'female'
SELECT count(*) , city FROM stadium GROUP BY city
SELECT count(*) , city FROM enzyme GROUP BY city
SELECT advisor , count(*) FROM enzyme GROUP BY advisor
SELECT advisor , count(*) FROM buildings GROUP BY advisor
SELECT appointmentid FROM bridge GROUP BY advisor ORDER BY count(*) DESC LIMIT 1
SELECT advisor FROM bridge GROUP BY advisor ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM enzyme WHERE FDA_approved = "Cat"
SELECT count(*) FROM enzyme WHERE FDA_approved = 'Second time'
SELECT T1.id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.track_id GROUP BY T1.id HAVING count(*) >= 2
SELECT T1.id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.track_id GROUP BY T1.id HAVING count(T2.track_id) > 1
SELECT student_id FROM student_course_attendance WHERE student_id = 301
SELECT student_id FROM students
SELECT count(*) FROM students AS T1 JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = "F" AND T1.name = "Eggs"
SELECT count(*) FROM student WHERE sex = "F" OR YEAR = 2009
SELECT count(*) FROM student_course_attendance AS T1 JOIN student AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = "English"
SELECT count(*) FROM student_course_attendance AS T1 JOIN student AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = "English"
SELECT T2.personal_name FROM student_course_attendance AS T1 JOIN department AS T2 ON T1.student_id = T2.student_id GROUP BY T2.student_id ORDER BY count(*) DESC LIMIT 1
SELECT T2.personal_name FROM student_course_attendance AS T1 JOIN department AS T2 ON T1.dept_store_id = T2.student_id GROUP BY T2.dept_name ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM Allergy_type
SELECT count(*) , T1.student_id FROM students AS T1 JOIN student_characteristics AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id
SELECT count(*) FROM Ref_Company_Status
SELECT T2.student_id , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T2.student_id
SELECT last_name FROM people WHERE student_id IN (SELECT student_id FROM student_course_attendance) INTERSECT SELECT T1.last_name FROM student AS T1 JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = "Fail")
SELECT T1.first_name , T1.last_name FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.student_id WHERE T2.first_name = "statistics" INTERSECT SELECT T1.last_name , T1.last_name FROM people AS T1 JOIN candidate AS T2 ON T1.candidate_id = T2.student_id WHERE T2.first_name = "Fail"
SELECT T3.attribute_name , T2.ACC_Regular_attendance FROM candidates AS T1 JOIN course AS T2 ON T1.course_id = T2.student_id JOIN people AS T3 ON T1.student_id = T3.student_id WHERE T2.personal_name = "Karson"
SELECT T2.attribute_name , T2.personal_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id WHERE T1.student_details = "stanley.monahan@example.org" ORDER BY T1.personal_name
SELECT first_name , last_name FROM people WHERE student_id IN (SELECT student_id FROM student_course_attendance)
SELECT first_name , last_name FROM people WHERE student_id IN (SELECT student_id FROM student WHERE first_name = "Treasury")
SELECT avg(T1.age) FROM people AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = "statistics" INTERSECT SELECT T1.age FROM student AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = "animal")
SELECT avg(T1.age) FROM students AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = "statistics" INTERSECT SELECT T1.date FROM savings AS T1 JOIN savings AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = "animal")
SELECT T1.first_name , T1.last_name FROM people AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.course_id NOT IN (SELECT T3.course_id FROM courses AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.dept_name = 'TV Lounge')
SELECT first_name , last_name FROM people WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)
SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = "English"
SELECT count(*) FROM student WHERE course_id IN ( SELECT T1.course_id FROM student AS T1 JOIN student AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = "USA" AND T2.course_id = "animal")
SELECT DISTINCT T2.first_name , T2.last_name FROM student AS T1 JOIN candidates AS T2 ON T1.class_code = T2.person_id WHERE T1.department_id = "Damianfort" OR T1.course_id = "Cat"
SELECT DISTINCT T2.student_details FROM student_course_attendance AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T1.student_id = "statistics" OR T2.course_name = "Cat"
SELECT count(*) FROM people WHERE student_id NOT IN ( SELECT T1.student_id FROM student AS T1 JOIN student_course AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = "Janessa" AND T2.last_name = "animal")
SELECT count(*) FROM people WHERE student_id NOT IN ( SELECT T1.student_id FROM Behavior_Incident AS T1 JOIN Ref_course AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = "English" OR T2.course_name = "animal")
SELECT first_name , last_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance WHERE student_id = (SELECT avg(student_id)
SELECT T1.first_name , T1.student_id FROM student AS T1 JOIN student_course AS T2 ON T1.student_id = T2.student_id WHERE T2.student_id = (SELECT avg(student_price) FROM products)
SELECT T2.country , T2.country FROM student_course_attendance AS T1 JOIN people AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.country , count(*) FROM students AS T1 JOIN student_market_attendance AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.country , T1.country FROM students AS T1 JOIN student_market_attendance AS T2 ON T1.student_id = T2.student_id GROUP BY T2.country_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.country , T1.country FROM students AS T1 JOIN savings AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.student_id , T2.capacity FROM exhibition_market AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id GROUP BY T2.journal_id ORDER BY avg(T1.total) DESC LIMIT 1
SELECT T1.country , T1.country FROM students AS T1 JOIN student_course_attendance AS T2 ON T1.student_id = T2.student_id GROUP BY T2.country_id ORDER BY avg(T2.total) DESC LIMIT 1
SELECT T1.first_name , T1.last_name FROM student AS T1 JOIN candidates AS T2 ON T1.person_id = T2.student_id GROUP BY T2.student_id ORDER BY avg(T2.date) DESC LIMIT 1
SELECT T2.first_name , T2.last_name FROM student_assessments AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.date DESC LIMIT 5
SELECT T1.first_name , T1.last_name FROM students AS T1 JOIN student_department_award AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
SELECT T2.first_name , T2.last_name , COUNT(*) FROM student AS T1 JOIN student AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.first_name , T1.customer_id FROM students AS T1 JOIN student_orders AS T2 ON T1.student_id = T2.student_id GROUP BY T1.customer_id ORDER BY sum(T2.time) DESC LIMIT 1
SELECT T2.first_name , T2.last_name , T2.other_time FROM exhibition AS T1 JOIN student AS T2 ON T1.student_id = T2.student_id GROUP BY T2.student_id ORDER BY sum(T2.time) DESC LIMIT 1
SELECT T2.product_name , COUNT(*) FROM exhibition AS T1 JOIN department_attendance AS T2 ON T1.dept_store_id = T2.dept_store_id GROUP BY T2.dept_name ORDER BY COUNT(*) DESC LIMIT 5
SELECT T2.course_name , COUNT(*) FROM students AS T1 JOIN department_registrations AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT label FROM candidate
SELECT course_name FROM candidate
SELECT candidate_id FROM candidate ORDER BY assessment_date ASC
SELECT course_name FROM candidate ORDER BY assessment_date DESC
SELECT title FROM course WHERE course_name LIKE "%A%"
SELECT T2.course_name FROM course AS T1 JOIN candidates AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name LIKE '%Party%' ORDER BY T1.last_name
SELECT T1.first_name , T1.last_name FROM student AS T1 JOIN candidates AS T2 ON T1.person_id = T2.student_id ORDER BY T2.total ASC LIMIT 1
SELECT T1.first_name , T1.last_name FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.student_id ORDER BY T2.date ASC LIMIT 1
SELECT sum(T2.total_) FROM accounts AS T1 JOIN journal_attendance AS T2 ON T1.department_id = T2.department_id WHERE T1.state = "Chicago"
SELECT sum(T2.total_) FROM accounts AS T1 JOIN student AS T2 ON T1.department_id = T2.department_id WHERE T1.state = "Chicago" AND T1.state = "IL"
SELECT count(*) FROM Invoices WHERE YEAR = 2007
SELECT count(*) FROM Ref_Shipping_Agents WHERE t1.shipping_agent_name = "Fail"
SELECT COUNT(*) , T1.state FROM addresses AS T1 JOIN people AS T2 ON T1.journal_id = T2.department_id GROUP BY T1.department_id
SELECT COUNT(*) , COUNT(*) FROM Invoices WHERE billing_country = "USA" GROUP BY billing_state
SELECT Nationality FROM addresses WHERE LOCATION = "United States" GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT born_state FROM student_course_attendance GROUP BY department_id ORDER BY count(*) DESC LIMIT 1
SELECT COUNT(*) , COUNT(*) FROM savings GROUP BY billing_state
SELECT COUNT(*) , sum(gamesplayed) FROM students AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id WHERE T1.state_province = "Fail"
SELECT T2.candidate_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.candidate_id
SELECT T2.course_name FROM candidates AS T1 JOIN people AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "English"
SELECT count(*) FROM courses AS T1 JOIN candidate AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = "English"
SELECT count(*) FROM courses AS T1 JOIN candidate AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = "English"
SELECT T2.personal_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.candidate_id WHERE T1.first_name = "stanley.monahan@example.org"
SELECT T2.company_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.candidate_id WHERE T1.first_name = "Janessa" AND T1.last_name = "Sawayn"
SELECT email_address , phone FROM customers WHERE email = "Astrid"
SELECT email_address , phone FROM people WHERE first_name = "Astrid" AND last_name = "Rohan"
SELECT count(*) FROM people WHERE city = "Prague"
SELECT count(*) FROM people AS T1 JOIN people AS T2 ON T1.address_id = T2.address_id WHERE T1.city = "English"
SELECT count(*) FROM people WHERE state_province_county = "Canada"
SELECT count(*) FROM people WHERE personal_name = "Colorado"
SELECT T2.country FROM people AS T1 JOIN people AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = "F" AND T1.last_name = "Bernhard"
SELECT T1.country FROM people AS T1 JOIN people AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = "F" AND T2.last_name = "Bernhard"
SELECT T2.course_name FROM people AS T1 JOIN candidates AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name LIKE "%English%"
SELECT T2.course_name FROM course AS T1 JOIN candidates AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name LIKE "%English%"
SELECT count(*) FROM employees AS T1 JOIN medicine_enzyme_compatible_employees AS T2 ON T1.medicine_id = T2.support_rep_id WHERE T2.first_name = 'Steve' AND T1.last_name = 'Johnson'
SELECT count(*) FROM customers AS T1 JOIN customers AS T2 ON T1.customer = T2.id WHERE T1.first_name = "Steve" AND T1.last_name = "Johnson"
SELECT phone , phone FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards'
SELECT phone , phone FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards'
SELECT first_name , last_name FROM employees WHERE FDA_approved = 'researcher'
SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.employees WHERE T1.first_name = 'Nancy' AND T1.last_name = 'Edwards'
SELECT address FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards";
SELECT phone FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards";
SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.medicine_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.medicine_id = T2.medicine_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM employees AS T1 JOIN medicine_addresses AS T2 ON T1.address_id = T2.department_id WHERE T1.country = 'Canada'
SELECT count(*) FROM employees WHERE country = 'Canada'
SELECT phone FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards";
SELECT phone FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards";
SELECT name , gender FROM employees ORDER BY birth_working DESC LIMIT 1
SELECT name , birth_place FROM employees ORDER BY birth_date DESC LIMIT 1
SELECT first_name , hire_date FROM medicine ORDER BY hire_date DESC LIMIT 1
SELECT T1.first_name , T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T1.customer_id = T2.id ORDER BY T2.total DESC LIMIT 10
SELECT count(*) , city FROM employees WHERE title = 'IT Staff' GROUP BY name
SELECT count(*) , city FROM employees WHERE name = 'IT Staff' GROUP BY city
SELECT T1.id , T1.first_name , count(*) FROM employees AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.reports_to ORDER BY count(*) DESC LIMIT 1
SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.medicine_id = T2.reports_to GROUP BY T1.reports_to ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM customers AS T1 JOIN status AS T2 ON T1.customer = T2.customer_id WHERE T1.first_name = 'Lucas' AND T1.last_name = 'Mancini";
SELECT count(*) FROM customers AS T1 JOIN status AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = 'Lucas' AND T1.last_name = 'Mancini";
SELECT sum(T1.Points) FROM customers AS T1 JOIN flight AS T2 ON T1.id = T2.customer_id WHERE T2.first_name = "Lucas" AND T1.last_name = 'Mancini";
SELECT sum(T1.total) FROM customers AS T1 JOIN status AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = "Lucas" AND T1.last_name = "Mancini";
SELECT name FROM media_types;
SELECT name FROM media_types;
SELECT DISTINCT name FROM genres
SELECT DISTINCT name FROM track
SELECT name FROM playlists
SELECT name FROM playlists
SELECT composer FROM tracks WHERE name = 'Fast As a Shark";
SELECT composer FROM tracks WHERE name = 'Fast As a Shark";
SELECT milliseconds FROM tracks WHERE name = 'Kolob Arch'
SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark"
SELECT T1.name FROM tracks AS T1 JOIN route AS T2 ON T1.stadium_id = T2.genre_id JOIN media_enzyme_enzyme AS T3 ON T2.media_type_code = T3.id WHERE T3.name = 'Rock'
SELECT T1.name FROM tracks AS T1 JOIN medicine_tracks AS T2 ON T1.track_id = T2.track_id JOIN media_types AS T3 ON T2.media_type_code = T3.id WHERE T3.name = 'Rock'
SELECT T2.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Balls to the Wall'
SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Balls to the Wall'
SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = 'Balls to the Wall'
SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = 'Balls to the Wall'
SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T2.album_id HAVING count(*) > 1
SELECT T1.name FROM medicine AS T1 JOIN status AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T2.bikes_available) > 10
SELECT T1.name FROM tracks AS T1 JOIN medicine_tracks AS T2 ON T1.stadium_id = T2.track_id JOIN media_types AS T3 ON T2.media_type_id = T3.id WHERE T3.name = 'Rock' AND T3.name = 'MPEG Lounge'
SELECT T3.name FROM genres AS T1 JOIN tracks AS T2 ON T1.stadium_id = T2.genre_id JOIN media_types AS T3 ON T2.media_type_code = T3.id WHERE T1.name = 'Rock' AND T3.name = 'MPEG Lounge'
SELECT T1.name FROM tracks AS T1 JOIN medicine_tracks AS T2 ON T1.stadium_id = T2.track_id JOIN media_types AS T3 ON T2.media_type_id = T3.id WHERE T3.name = 'Rock' OR T3.name = 'MPEG Kertzmann and% and% and Sons TYPE'
SELECT T1.name , T1.name FROM tracks AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.medicine_id = T2.track_id JOIN media_type AS T3 ON T2.media_type_code = T3.id WHERE T3.name = 'Rock'
SELECT T1.name FROM tracks AS T1 JOIN medicine_tracks AS T2 ON T1.stadium_id = T2.track_id JOIN media_types AS T3 ON T2.media_type_code = T3.id WHERE T3.name = 'Rock' OR T3.name = 'MPEG Lounge'
SELECT T1.name FROM tracks AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Rock' OR T3.name = 'MPEG audio file'
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.track_id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies'
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.track_id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.playlist_id WHERE T3.name = 'Movies'
SELECT T1.name FROM playlist_tracks AS T1 JOIN playlist_tracks AS T2 ON T1.playlist_id = T2.track_id GROUP BY T2.playlist_id HAVING count(*) >= 1
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id GROUP BY T2.track_id HAVING count(*) > 100
SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN web_client_customers AS T3 ON T3.customer_id = T3.customer_id WHERE T3.first_name = 'Daan' AND T3.name = 'inhibitor'
SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.track_id = T2.track_id JOIN web_client_enzyme AS T3 ON T3.accelerator_id = T3.id JOIN customers AS T4 ON T3.customer_id = T4.id WHERE T4.first_name = 'Daan' AND T4.name = 'Walter Kertzmann and-19 15:15"
SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark"
SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark";
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.track_id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.playlist_id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.track_id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.playlist_id WHERE T3.name = 'Music'
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.track_id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.playlist_id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.track_id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.playlist_id WHERE T3.name = 'Music'
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.track_id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.track_id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.track_id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.track_id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'
SELECT T2.Name , COUNT(*) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Name
SELECT T2.Name , COUNT(*) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Name
SELECT count(*) FROM people
SELECT Name FROM people ORDER BY Sales_in_Billion ASC
SELECT name , Age FROM people
SELECT Name FROM people WHERE Age > 2000
SELECT Name FROM people WHERE Age = 24 OR Age = 24 OR Age = 'Rainbow Bridge'
SELECT name FROM people ORDER BY Age ASC LIMIT 1
SELECT Age , count(*) FROM people GROUP BY Age
SELECT Age FROM people ORDER BY Height DESC LIMIT 1
SELECT DISTINCT Company FROM debate
SELECT T3.Name , T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN people AS T3 ON T1.Company_ID = T3.Company_ID
SELECT T3.Name , T2.Name FROM people AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN people AS T3 ON T1.Company_ID = T3.Company_ID
SELECT T1.Name , T2.Name FROM people AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN people AS T3 ON T1.Company_ID = T3.Company_ID ORDER BY T3.Name ASC
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Sales > 3000
SELECT T2.Name , T1.Name , COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T1.Name
SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Name HAVING COUNT(*) >= 2
SELECT Name FROM people WHERE People_ID NOT IN (SELECT Affirmative FROM debate_people)
SELECT T2.theme , T1.Date , T1.Venue FROM debate_people AS T1 JOIN people AS T2 ON T1.Debate_ID = T2.Debate_ID
SELECT avg(T2.Price) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Name = 'Photo'
SELECT count(*) FROM people
SELECT count(*) FROM Church
SELECT Name FROM people
SELECT T1.Name , T2.Name , T1.other_account_details FROM people AS T1 JOIN people AS T2 ON T1.Debate_ID = T2.Debate_ID
SELECT other_Name FROM people WHERE Name = '338'
SELECT other_Name FROM people WHERE Name = '338'
SELECT T2.Name , T2.Name , T1.Venue FROM people AS T1 JOIN people AS T2 ON T1.Debate_ID = T2.people_id
SELECT T2.Name , T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Debate_ID = T2.Debate_ID
SELECT count(*) FROM people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID WHERE T2.Name = "Metallica" AND T2.last_name = "Turcotte"
SELECT count(*) FROM people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID WHERE T2.Name = "Art" AND T2.last_name = "Turcotte"
SELECT T1.id , T2.Name , COUNT(*) FROM people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T1.StuID
SELECT count(*) , T1.Name FROM people AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id GROUP BY T1.customer_id
SELECT T1.member_id , T2.Venue FROM debate_people AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1
SELECT T1.Name , COUNT(*) FROM people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1
SELECT T2.Name , T2.Name , T2.last_name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Name ORDER BY count(*) ASC LIMIT 1
SELECT T2.Name , T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Affirmative ORDER BY count(*) ASC LIMIT 1
SELECT count(*) FROM people WHERE people_id NOT IN (SELECT StuID FROM body_builder)
SELECT count(*) FROM people WHERE people_id NOT IN (SELECT StuID FROM body_builder)
SELECT first_name , last_name FROM people WHERE people_id NOT IN (SELECT Affirmative FROM debate_people)
SELECT name , people FROM people WHERE people_id NOT IN (SELECT Affirmative FROM debate_people)
SELECT DISTINCT T1.first_name , T1.last_name FROM customers AS T1 JOIN management AS T2 ON T1.customer_id = T2.customer_id WHERE T2.age = 1
SELECT T1.first_name , T1.last_name FROM customers AS T1 JOIN management AS T2 ON T1.customer_id = T2.customer_id
SELECT count(DISTINCT customer_id) FROM customer
SELECT count(DISTINCT T1.name) FROM customers AS T1 JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.loan_type = 'inhibitor'
SELECT count(*) FROM customers
SELECT count(*) FROM Rooms
SELECT phone , phone , phone FROM phone
SELECT phone_number , phone FROM phone
SELECT phone_number , email FROM customers WHERE first_name = "Michael" AND last_name = "Rohan"
SELECT phone , email FROM customers WHERE first_name = "Michael" AND last_name = "Rohan"
SELECT count(*) FROM Customers
SELECT count(*) FROM Customers
SELECT T2.Jan , T2.location FROM music_Arrears AS T1 JOIN phone AS T2 ON T1.master_id = T2.customer_id WHERE T1.card_type = 'Marriage'
SELECT card_type_code , name , customer_id FROM Customers EXCEPT SELECT T1.customer_id , T1.customer_id , T1.card_id , T2.operating_system_code , T2.code , T2.phone_number , T2.card_type_code , T2.phone FROM Customers AS T1 JOIN phone AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id
SELECT date_valid_in_G , T2.date FROM music_festival AS T1 JOIN phone AS T2 ON T1.Volume = T2.Volume_ID WHERE T2.4560596484842 = 'inhibitor'
SELECT T2.date , T2.date , T1.office FROM news_report AS T1 JOIN phone AS T2 ON T1.machine_id = T2.machine_id WHERE T1.used_system = "4560596484842"
SELECT T2.name , T2.Carrier FROM CUSTOMER AS T1 JOIN people AS T2 ON T1.Phone = T2.authid JOIN phone AS T3 ON T1.Graphics_ID = T3.screen_ID WHERE T3.Hometown = "4560596484842"
SELECT T2.Name , T2.Carrier FROM CUSTOMER AS T1 JOIN people AS T2 ON T1.Graphics_ID = T2.EmployeeId GROUP BY T2.Name
SELECT count(*) FROM customer AS T1 JOIN match_season AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.Name = "Art" AND T2.last_name = "Turcotte"
SELECT count(*) FROM customer AS T1 JOIN match_season AS T2 ON T1.master_id = T2.master_customer_id WHERE T2.name = "Art" AND T2.last_name = "Johnson"
SELECT count(*) FROM Customers WHERE Competition_type = "Debit"
SELECT count(*) FROM customer WHERE TYPE = "England"
SELECT count(*) FROM customer AS T1 JOIN match_Status AS T2 ON T1.master_customer_id = T2.customer_id WHERE T2.College = "West" AND T2.work_type = "Mancini";
SELECT count(*) FROM customer AS T1 JOIN on_call AS T2 ON T1.Representative_ID = T2.College_ID WHERE T2.College = "West" AND T2.work_type = "Johnson"
SELECT T1.id , T2.Name FROM climber AS T1 JOIN MATCH AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name
SELECT Police_force , COUNT(*) FROM Customers GROUP BY customer_id
SELECT T2.Author , COUNT(*) FROM Has_coaster AS T1 JOIN phone AS T2 ON T1.station_id = T2.station_id GROUP BY T2.station_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT appointmentid FROM event ORDER BY START DESC LIMIT 1
SELECT T1.name , T1.age FROM CUSTOMER AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.player_id HAVING count(*) >= 2
SELECT T1.id , T2.Name FROM CUSTOMER AS T1 JOIN people AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*) >= 2
SELECT T1.name , T2.Name FROM Performance AS T1 JOIN people AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T2.Name ORDER BY count(*) ASC LIMIT 1
SELECT T1.id , T2.Name FROM CUSTOMER AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name ORDER BY COUNT(*) ASC LIMIT 1
SELECT TYPE , COUNT(*) FROM Type GROUP BY Competition_type
SELECT POSITION , COUNT(*) FROM Customers GROUP BY Membership_force
SELECT TYPE FROM Type GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1
SELECT TYPE FROM Type GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1
SELECT TYPE FROM vocals GROUP BY TYPE HAVING COUNT(*) >= 5
SELECT TYPE FROM vocals GROUP BY Status HAVING COUNT(*) >= 5
SELECT count(DISTINCT T2.type) , COUNT(DISTINCT T1.type FROM train_code AS T1 JOIN phone AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.code
SELECT count(DISTINCT T2.type) , count(DISTINCT T1.type FROM code AS T1 JOIN school AS T2 ON T1.code = T2.code GROUP BY T2.allergytype
SELECT T2.Author , T2.Type FROM CUSTOMER AS T1 JOIN match_season AS T2 ON T1.customer_id = T2.customer_id WHERE T1.name = "Brittany drive"
SELECT T1.first_name , T1.last_name FROM customers AS T1 JOIN customer_market AS T2 ON T1.customer_id = T2.customer_id WHERE T2.Position = "operating system"
SELECT DISTINCT Company_code FROM phone
SELECT DISTINCT T2.type FROM train_code AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id
SELECT count(DISTINCT Governor) FROM party
SELECT count(DISTINCT Status) FROM party
SELECT DISTINCT TYPE FROM department
SELECT DISTINCT TYPE FROM vocals
SELECT count(*) FROM department
SELECT count(DISTINCT TYPE) FROM vocals
SELECT avg(Price) , avg(enrollment) , avg(enrollment) FROM department
SELECT avg(Speed) FROM roller_coaster
SELECT TYPE , COUNT(*) FROM Type GROUP BY Competition
SELECT T2.name , T2.Type FROM mountain AS T1 JOIN party AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name
SELECT TYPE , COUNT(*) FROM department GROUP BY TYPE
SELECT TYPE , COUNT(*) FROM roller_coaster GROUP BY TYPE
SELECT TYPE FROM competition GROUP BY TYPE ORDER BY sum(Price) DESC LIMIT 1
SELECT TYPE FROM competition GROUP BY TYPE ORDER BY avg(Price) DESC LIMIT 1
SELECT T1.account_id , count(*) FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.Ship_ID = T2.Wrestler_ID GROUP BY T1.Ship_ID
SELECT * FROM event GROUP BY *
SELECT count(*) FROM aircraft
SELECT count(*) FROM aircraft
SELECT name , LOCATION FROM LOCATIONS
SELECT name , LOCATION FROM station
SELECT name , seating FROM ship WHERE open_year > 2000 ORDER BY Name DESC
SELECT name , seating FROM ship WHERE open_year > 2000 ORDER BY open
SELECT name , LOCATION , LOCATION FROM ship ORDER BY open_year DESC LIMIT 1
SELECT name , LOCATION , seating FROM ship ORDER BY open_year DESC LIMIT 1
SELECT avg(seating) , max(seating) , max(seating) FROM phone
SELECT avg(seating) , max(seating) , max(seating) FROM wine
SELECT name , LOCATION FROM ship WHERE seating > (SELECT avg(seating) FROM event)
SELECT name , LOCATION , LOCATION FROM ship WHERE seating > (SELECT avg(seating) FROM event)
SELECT DISTINCT LOCATION FROM ship
SELECT DISTINCT LOCATION FROM LOCATIONS
SELECT count(*) FROM swimmer
SELECT count(*) FROM aircraft
SELECT DISTINCT CLASS FROM roller_coaster
SELECT DISTINCT CLASS FROM department
SELECT name , max(Milliseconds) , min(Score) , max(Score) FROM WINE
SELECT T1.name , T1.date , T2.Date , T2.Venue FROM Scientists AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID
SELECT T1.Market_ID , count(*) FROM country AS T1 JOIN news_market AS T2 ON T1.Market_ID = T2.Market_ID GROUP BY T1.Market_ID
SELECT CLASS , count(*) FROM manufacturers GROUP BY CLASS
SELECT CLASS FROM manufacturers GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1
SELECT CLASS FROM manufacturers GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1
SELECT T1.name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_ID = T2.class_ID GROUP BY T2.CLASS HAVING count(*) >= 2
SELECT T2.name FROM membership_register_people AS T1 JOIN people AS T2 ON T1.Wrestler_ID = T2.People_ID GROUP BY T1.County_ID HAVING COUNT(*) >= 2
SELECT Name FROM track WHERE Nominee = 'Cutter' EXCEPT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Ship_ID = T2.People_ID
SELECT Name FROM track WHERE CLASS = 'Cutter' EXCEPT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Ship_ID = T2.People_ID
SELECT Name FROM track WHERE track_id NOT IN (SELECT Ship_ID FROM Has_allergy )
SELECT Name FROM track WHERE Name NOT IN (SELECT T1.Name FROM mission AS T1 JOIN station AS T2 ON T1.Ship_ID = T2.People_ID
SELECT open_year FROM ship WHERE seating BETWEEN 4000 AND 5000
SELECT open_year FROM company WHERE name != '15-15-15-23'
SELECT T2.name , COUNT(*) FROM train_market AS T1 JOIN company AS T2 ON T1.Manufacturer = T2.code GROUP BY T1.name
SELECT T2.Name , COUNT(*) FROM race AS T1 JOIN people AS T2 ON T1.Grape = T2.Grape GROUP BY T1.Name
SELECT T2.name FROM train_market AS T1 JOIN company AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Name FROM train_market AS T1 JOIN company AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.name , T1.Years_working , T2.Name FROM Scientists AS T1 JOIN phone AS T2 ON T1.Debate_ID = T2.Name
SELECT T3.Name , T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.machine_id JOIN journalist AS T3 ON T1.Affirmative = T3.People_ID
SELECT T2.name , T2.Name FROM assignedto AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID
SELECT T2.Name , T2.Name FROM Member AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name HAVING COUNT(*) = 1
SELECT LOCATION FROM ship WHERE seating > 90000 INTERSECT SELECT LOCATION FROM party WHERE seating < 70000
SELECT LOCATION FROM ship WHERE seating > 90000 INTERSECT SELECT LOCATION FROM party WHERE LOCATION = 'Kolob Arch'
SELECT count(*) FROM authors WHERE POSITION = 'Black'
SELECT count(*) , T1.name FROM people AS T1 JOIN news_market AS T2 ON T1.address_id = T2.address_id GROUP BY T1.building
SELECT Name FROM people WHERE LOCATION = "England" OR Nationality = "TMobile"
SELECT Name , CLASS FROM people WHERE Height > 220 OR Height < 10
SELECT T1.name , T1.age , T1.age FROM people AS T1 JOIN roller_coaster AS T2 ON T1.Market_ID = T2.Market_ID GROUP BY T1.Name ORDER BY T2.Name
SELECT Membership_force FROM party GROUP BY Membership_working HAVING COUNT(*) > 60
SELECT T2.name FROM people AS T1 JOIN people AS T2 ON T1.address_id = T2.people_id WHERE T1.age > 30 INTERSECT SELECT T2.winning FROM player AS T1 JOIN manufacturers AS T2 ON T1.people_id = T2.people_id WHERE T1.age > 30
SELECT T2.name FROM membership_register_Transaction_Status AS T1 JOIN member AS T2 ON T1.address_id = T2.code WHERE T1.city = "West" INTERSECT SELECT T2.name FROM membership_register_city AS T1 JOIN manufacturers AS T2 ON T1.Country = T2.company_id WHERE T1.city = "Canada"
SELECT count(*) FROM people WHERE country != "Canada"
SELECT address FROM addresses WHERE Hometown != 'Black'
SELECT address FROM ID ORDER BY open_year
SELECT avg(T1.age) , T2.name FROM staff AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation
SELECT id , LOCATION FROM WINE WHERE score < (SELECT avg(revenue) FROM manufacturers)
SELECT * FROM staff WHERE ID NOT IN (SELECT T1.staff_id FROM news_report AS T1 JOIN department AS T2 ON T1.department_id = T2.staff_id WHERE T2.Name = 'Opera')
SELECT T2.address , T1.name FROM assignedto AS T1 JOIN event AS T2 ON T1.id = T2.custid
SELECT T2.ssn , T2.name FROM ALBUM AS T1 JOIN MATCH AS T2 ON T1.i_id = T2.i_id GROUP BY T1.i_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT MONTH FROM WINE GROUP BY main_industry ORDER BY COUNT(*) DESC LIMIT 1
SELECT MONTH FROM WINE GROUP BY main_HAVING COUNT(*) > 2
SELECT count(*) FROM Church
SELECT count(*) FROM aircraft
SELECT Name FROM Name
SELECT Name FROM Name
SELECT * FROM customer WHERE State_Name = "NY"
SELECT * FROM customer WHERE State_state = "NY"
SELECT T2.name , T2.last_name FROM city AS T1 JOIN people AS T2 ON T1.stu_ID = T2.assigned_to_ID WHERE T1.city = "Damianfort"
SELECT T2.name , T3.Name FROM city AS T1 JOIN people AS T2 ON T1.address_id = T2.address_id JOIN addresses AS T3 ON T1.scientist = T3.SSN WHERE T1.name = 'Louisville , Kentucky'
SELECT DISTINCT T1.Market_ID FROM country AS T1 JOIN news_market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Position = "Yes"
SELECT DISTINCT T1.Market_ID FROM country AS T1 JOIN management AS T2 ON T1.Market_ID = T2.Market_ID
SELECT T2.name FROM Performance AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.name = "England"
SELECT T2.Name FROM Performance AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Name LIKE '%Led%'
SELECT T2.Name FROM APPELLATIONs AS T1 JOIN people AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Name = "Bob"
SELECT T2.Name FROM APPELLATIONs AS T1 JOIN people AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.name = "Bob"
SELECT COUNT(*) FROM Elimination WHERE T2.Name = "Metallica"
SELECT COUNT(*) FROM Elimination WHERE Nominee = "Metallica"
SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Name = "Balls to the Wall"
SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Name = "Balls to the Wall"
SELECT T2.Name FROM Performance AS T1 JOIN manager AS T2 ON T1.Artist_ID = T2.Member_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1
SELECT Name FROM manager ORDER BY Name DESC LIMIT 1
SELECT Name FROM event WHERE Name LIKE "%you%"
SELECT Name FROM ship WHERE Name LIKE '%you%'
SELECT avg(price) FROM journalist
SELECT avg(price) FROM journalist
SELECT max(Milliseconds) , min(Milliseconds) FROM debate
SELECT max(Sales_in_G) , min(Sales_in_Billion) FROM phone
SELECT T2.Name , COUNT(*) FROM ALBUM AS T1 JOIN team AS T2 ON T1.Affirmative = T2.Submission_ID GROUP BY T1.ID
SELECT T2.Name , COUNT(T1.Name) FROM Member AS T1 JOIN event AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.Name
SELECT Name FROM phone ORDER BY Attendance DESC LIMIT 1
SELECT T2.Name FROM stock AS T1 JOIN artwork AS T2 ON T1.Representative_ID = T2.Representative_ID GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) ASC LIMIT 1
SELECT T2.Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T1.Name ORDER BY COUNT(*) ASC LIMIT 1
SELECT T2.Name , T2.database_company FROM film_market_estimation AS T1 JOIN phone AS T2 ON T1.Film_ID = T2.Film_ID WHERE T1.Sales > 60 GROUP BY T2.Name
SELECT T2.Name , T2.Name FROM film_market_estimation AS T1 JOIN phone AS T2 ON T1.Film_ID = T2.Film_ID WHERE T1.Sales > 1 GROUP BY T2.work_type
SELECT COUNT(*) FROM performance AS T1 JOIN trained_in AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Name = "Rock"
SELECT COUNT(*) FROM performance AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Name = "Rock"
SELECT avg(T2.UnitPrice) FROM stock AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T1.Name = "England"
SELECT AVG(T2.UnitPrice) FROM stock AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T1.Name = "England"
SELECT T2.Name , T2.Venue FROM Performance AS T1 JOIN Band AS T2 ON T1.Debate_ID = T2.Debate_ID WHERE T1.email = "stanley.monahan@example.org"
SELECT T2.Name , T2.Venue FROM Performance AS T1 JOIN phone AS T2 ON T1.Debate_ID = T2.Debate_ID WHERE T1.Venue = "stanley.monahan@example.org"
SELECT COUNT(*) FROM performance WHERE Director LIKE "%gmail.com%"
SELECT count(DISTINCT Venue) FROM manager
SELECT T2.Name , T2.Carrier FROM Performance AS T1 JOIN Band AS T2 ON T1.Debate_ID = T2.Debate_ID WHERE T1.Result = "Violin"
SELECT T2.Name , T2.Elimination_Move FROM Performance AS T1 JOIN phone AS T2 ON T1.Debate_ID = T2.Debate_ID WHERE T1.Name = "Violin"
SELECT T2.Author FROM Performance AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T1.PostalCode = "70174"
SELECT T2.Author FROM Performance AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T1.PostalCode = "70174"
SELECT count(DISTINCT city) FROM market
SELECT count(DISTINCT city) FROM market
SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = "Michael State = "Michael State Shea Crescent" AND T1.Year = 2005
SELECT T2.InvoiceDate FROM Performance AS T1 JOIN journal AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T1.FirstName = "Michael" AND T1.last = "Walter Hill"
SELECT T1.LName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId = T2.CustomerId WHERE T2.Num_of_Audience > 3000
SELECT T1.LName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId = T2.CustomerId WHERE T2.Num_of_Audience > 20
SELECT DISTINCT T1.Name FROM STUDENT AS T1 JOIN member AS T2 ON T1.Phone_ID = T2.CustomerId WHERE T2.Country = "Heilo"
SELECT DISTINCT T1.Name FROM STUDENT AS T1 JOIN member AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Country = "Yes"
SELECT DISTINCT T1.Address FROM STUDENT AS T1 JOIN market AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Country = "Germany"
SELECT DISTINCT T1.Address FROM customers AS T1 JOIN management AS T2 ON T1.id = T2.EmployeeID
SELECT phone FROM phone
SELECT phone FROM phone
SELECT count(*) FROM MEDIATYPE AS T1 JOIN event AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.name = 'AAC audio file'
SELECT count(*) FROM MEDIATYPE AS T1 JOIN event AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T2.name = 'AAC Security'
SELECT avg(T1.stars) FROM stadium AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.name = 'Dan' OR T1.name = 'Music'
SELECT avg(T1.games) FROM stadium AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.name = 'Boston Red Stockings' OR T1.name = 'Music'
SELECT T1.first_name , T1.last_name FROM drivers AS T1 JOIN CMI_Cross_References AS T2 ON T1.facID = T2.facID GROUP BY T1.id HAVING count(*) >= 10
SELECT T1.first_name , T1.last_name FROM drivers AS T1 JOIN EMPLOYEE AS T2 ON T1.id = T2.swimmer_id GROUP BY T1.id HAVING count(*) >= 10
SELECT T1.lname FROM STAFF AS T1 JOIN lives_in AS T2 ON T1.StuID = T2.StuID GROUP BY T2.name HAVING count(*) <= 1
SELECT T1.name FROM STAFF AS T1 JOIN EMPLOYEE AS T2 ON T1.id = T2.stadium_id GROUP BY T2.name HAVING count(*) <= 30
SELECT title FROM albums ORDER BY title
SELECT title FROM Albums ORDER BY title
SELECT T2.name , T2.Name FROM APPELLATIONs AS T1 JOIN PersonFriend AS T2 ON T1.id = T2.swimmer_id GROUP BY T1.id HAVING count(*) >= 3
SELECT T2.name , T2.name FROM Person AS T1 JOIN people AS T2 ON T1.id = T2.stadium_id GROUP BY T1.artist_name HAVING count(*) >= 3
SELECT name FROM stadium EXCEPT SELECT T1.name FROM stadium AS T1 JOIN lives_in AS T2 ON T1.EmployeeID = T2.physician JOIN dorm AS T3 ON T2.artist_id = T3.id
SELECT name FROM faculty EXCEPT SELECT T1.name FROM swimmer AS T1 JOIN management AS T2 ON T1.id = T2.swimmer_id
SELECT avg(T2.cost) FROM genres AS T1 JOIN papers AS T2 ON T1.Manufacturer = T2.code WHERE T1.name = "Rock"
SELECT avg(T2.cost) FROM genres AS T1 JOIN papers AS T2 ON T1.Manufacturer = T2.code WHERE T1.name = 'Rock'
SELECT max(T1.stars) , T2.max(T1.duration) FROM accounts AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.name = 'Dan' AND T1.name = 'doctor'
SELECT max(T2.fastestlapspeed) , min(T1.Price) FROM genres AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Boston Red Stockings'
SELECT BirthDate FROM addresses WHERE city = 'California'
SELECT DISTINCT T2.friend FROM APPELLATIONs AS T1 JOIN people AS T2 ON T1.address_id = T2.id WHERE T1.city = 'Goroka'
SELECT DISTINCT title FROM phone
SELECT DISTINCT title FROM department
SELECT count(DISTINCT driverId) FROM wine WHERE id NOT IN (SELECT T1.id FROM Prescribes AS T1 JOIN_in AS T2 ON T1.Participant_ID = T2.ID WHERE T2.name = 'engineer')
SELECT count(*) FROM PersonFriend WHERE name NOT IN(SELECT id) FROM Participants_in_Events)
SELECT T2.title FROM Faculty AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = '2008 States' INTERSECT SELECT T1.title FROM albums AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Music'
SELECT T1.title FROM albums AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.Code WHERE T3.name = 'Reggae' INTERSECT SELECT T1.title FROM Album AS T1 JOIN Faculty_participates_in AS T2 ON T1.course = T2.course_id JOIN savings AS T3 ON T1.course_id = T2.actid WHERE T3.name = 'Music'
SELECT phone FROM phone
SELECT phone FROM phone
SELECT phone FROM phone WHERE available_type != 'Lamberton'
SELECT phone FROM phone WHERE Accreditation_type = 'Credit Card'
SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1
SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1
SELECT phone FROM phone WHERE LOCATION = 'Credit Card' GROUP BY phone ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT phone FROM available_Type WHERE flag = (SELECT max(DISTINCT T1.stars) FROM phone AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Type = 'Credit')
SELECT TYPE FROM vocals GROUP BY TYPE HAVING count(*) > 4
SELECT TYPE FROM vocals AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id HAVING count(*) > 4
SELECT sum(amount) , max(amount) FROM savings)
SELECT sum(market_share) , sum(market_amount) FROM settlements
SELECT T2.name FROM GRAPES AS T1 JOIN services AS T2 ON T1.id = T2.project GROUP BY T2.name HAVING count(*) >= 2
SELECT T2.balance FROM GRAPES AS T1 JOIN services AS T2 ON T1.id = T2.service_id GROUP BY T2.name HAVING count(*) > 2
SELECT T1.Effective FROM accounts AS T1 JOIN settlements AS T2 ON T1.organisation_id = T2.claim_id GROUP BY T1.organisation_id ORDER BY sum(T2.balance) DESC LIMIT 1
SELECT T1.nationality FROM constructors AS T1 JOIN routes AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.nationality ORDER BY sum(T2.balance) DESC LIMIT 1
SELECT count(DISTINCT t1.city) FROM customers AS t1 JOIN phone AS t2 ON t1.customer = t2.customer_id WHERE t2.name = 'Dayana Robel'
SELECT count(DISTINCT t3.count) FROM customers AS t1 JOIN customers AS t2 ON t1.customer = t2.id JOIN savings AS t3 ON t2.screen_mode = t3.StuID WHERE t1.fname = "Dayana Robel"
SELECT T1.name FROM customers AS T1 JOIN Student AS T2 ON T1.id = T2.advisor GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
SELECT T1.name FROM customers AS T1 JOIN phone AS T2 ON T1.stadium = T2.id GROUP BY T1.stadium_id ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT T3.type FROM customers AS T1 JOIN phone AS T2 ON T1.customer = T2.customer_id JOIN screen_mode AS T3 ON T1.Graphics_type = T3.code WHERE T2.name = 'Email'
SELECT DISTINCT T2.type FROM policies AS T1 JOIN journal AS T2 ON T1.id = T2.master_id WHERE T1.name = 'Dayana Robel'
SELECT DISTINCT t3.type FROM customers AS t1 JOIN authorship AS t2 ON t1.customer = t2.customer_id JOIN available AS t3 ON t3.scientist = t3.SSN WHERE t1.name = (SELECT max(DISTINCT t2.rating) FROM customers AS t1 JOIN customer_policies AS t2 ON t1.id = t2.customer_id WHERE t1.name = 'Australia')
SELECT DISTINCT T3.type FROM customers AS T1 JOIN loan AS T2 ON T1.id = T2.cName JOIN savings AS T3 ON T1.enzyme = T3.id WHERE T2.name = 'Australia' GROUP BY T3.type ORDER BY count(*) DESC LIMIT 1
SELECT service_type FROM services ORDER BY name
SELECT name FROM service ORDER BY TIME
SELECT count(*) FROM services
SELECT count(*) FROM Ref_document_types
SELECT name FROM employee EXCEPT SELECT T1.name FROM employee AS T1 JOIN lives_in AS T2 ON T1.facID = T2.employee_id
SELECT name FROM employee EXCEPT SELECT T1.name FROM customers AS T1 JOIN ROLES AS T2 ON T1.project_id = T2.code
SELECT T1.name FROM customers AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Smith" OR T3.name = 'Carol Smith'
SELECT T1.name FROM customers AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code JOIN scientists AS T3 ON T1.Graphics_mode = T3.code WHERE T3.name = 'Surgery' OR T3.name = 'Carol a policy'
SELECT T1.name FROM customers AS T1 JOIN Documents AS T2 ON T1.role_code = T2.code WHERE T2.name = 'A' INTERSECT SELECT T1.name FROM documents AS T1 JOIN Documents AS T2 ON T1.service_id = T2.service_id WHERE T2.name = 'A'
SELECT t1.name FROM customers AS t1 JOIN broadcast AS t2 ON t1.service_id = t2.service_id WHERE t2.name = 'A' INTERSECT SELECT t1.name FROM documents AS t1 JOIN Documents AS t2 ON t1.service_id = t2.service_id WHERE t2.name = 'A Puzzling Parallax'
SELECT customer_id FROM Employees WHERE first_name LIKE "%s%"
SELECT T1.customer_id , T1.name FROM customers AS T1 JOIN customer_management AS T2 ON T1.customer_id = T2.customer_id
SELECT max(market_amount) , min(market_amount) FROM settlements
SELECT max(market_share) , min(market_amount) FROM Ref_locations
SELECT customer_details FROM customers ORDER BY customer_id ASC
SELECT customer_name FROM customers ORDER BY customer_id
SELECT T2.name , T2.open_date FROM mailshot_customers AS T1 JOIN locations AS T2 ON T1.location = T2.code WHERE T1.customer_name LIKE "%Diana%"
SELECT T2.role_name , T2.ACC_working FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.Furniture_ID = T2.location_code WHERE T1.state = 'LINDA'
SELECT count(*) FROM Ref_locations
SELECT count(DISTINCT OWNER) FROM ship
SELECT t2.name FROM documents AS t1 JOIN <unk> AS t2 ON t1.<unk> = t2.<unk>_id JOIN head AS t3 ON t2.head_id = t3.head_id ORDER BY t1.name DESC
SELECT name FROM documents ORDER BY budget DESC
SELECT T2.name , T2.location FROM Rating AS T1 JOIN PersonFriend AS T2 ON T1.code = T2.cName
SELECT DISTINCT t3.name , t3.location FROM customers AS t1 JOIN <unk> AS t2 ON t1.school_id = t2.<unk> JOIN Document_locations AS t3 ON t2.location = t3.location_code
SELECT max(OMIM) FROM airports
SELECT max(OMIM) FROM airports
SELECT product_type , chromosome , porphyria FROM Document_locations WHERE LOCATION = 'Cytosol'
SELECT creation , LOCATION , LOCATION FROM university WHERE LOCATION = 'Cytosol'
SELECT t1.name FROM documents AS t1 JOIN projects AS t2 ON t1.project_id = t2.code WHERE t2.product_name != 'Protoporphyrinogen IX'
SELECT name FROM Products WHERE product_id NOT IN (SELECT document_id FROM products)
SELECT T1.name , T1.trade_name FROM employee AS T1 JOIN medicine_market AS T2 ON T1.employee_id = T2.employee_id GROUP BY T1.employee_id HAVING count(*) > 1
SELECT name , trade_name FROM employee WHERE employee_id = 'Yes'
SELECT T2.name FROM All_documents AS T1 JOIN document_with AS T2 ON T1.document_id = T2.document_id JOIN head AS T3 ON T1.medicine_id = T3.head_id WHERE T3.name = 'Movies'
SELECT T1.name FROM documents AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id JOIN scientists AS T3 ON T1.medicine_id = T3.Graphics_mode WHERE T3.name = 'Movies' AND T2.name = 'A'
SELECT T1.task_id , T1.task_details FROM Documents AS T1 JOIN Documents AS T2 ON T1.medicine_id = T2.document_id GROUP BY T1.task_id HAVING count(*) >= 2
SELECT T1.name FROM employee AS T1 JOIN Customer_Policies AS T2 ON T1.medicine_id = T2.document_id GROUP BY T2.employee_id HAVING count(*) > 1
SELECT T1.name , T1.task_id , T1.task_details FROM employee AS T1 JOIN CLASS AS T2 ON T1.SSN = T2.class_code GROUP BY T1.statement_id ORDER BY count(*) DESC
SELECT T1.name , T1.task_id , T1.task_details FROM employee AS T1 JOIN Participants AS T2 ON T1.medicine_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC
SELECT T1.id , T1.name FROM Person AS T1 JOIN Participants AS T2 ON T1.Manufacturer = T2.code GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1
SELECT T1.id , T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.cName GROUP BY T1.project ORDER BY count(*) DESC LIMIT 1
SELECT T1.WiFi FROM Ref_games AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id JOIN head AS T3 ON T3.head = T3.head_id WHERE T3.name = 'Charles'
SELECT T1.WiFi FROM Ref_document_games AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id JOIN head AS T3 ON T3.head = T2.head_id WHERE T3.name = 'Charles'
SELECT document_type_code , count(*) FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1
SELECT count(*) , sum(Documents_on_Top) FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM employee WHERE CLASS = 'No-261'
SELECT count(*) FROM employee WHERE wifi = 'No'
SELECT count(*) FROM Ref_locations WHERE document_id NOT IN ( SELECT document_id FROM Documents );
SELECT count(*) FROM ship WHERE ship_id NOT IN ( SELECT DISTINCT t1.ship_id FROM AssignedTo AS t)
SELECT T1.job , T1.name FROM employee AS T1 JOIN management AS T2 ON T1.project_id = T2.code GROUP BY T1.project_id HAVING count(*) >= 3
SELECT T1.employee_id , T1.trade_name FROM employee AS T1 JOIN management AS T2 ON T1.employee_id = T2.project_id GROUP BY T1.project_id HAVING count(*) >= 3
SELECT DISTINCT T2.location , T2.location FROM stock AS T1 JOIN Document_locations AS T2 ON T1.location = T2.code JOIN head AS T3 ON T1.head_id = T3.location_code WHERE T3.document_name = 'Robin CV'
SELECT DISTINCT T2.name , T2.location FROM mailshot_customers AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T1.document_type = 'inhibitor'
SELECT T1.name , T1.trade_name FROM employee AS T1 JOIN management AS T2 ON T1.EmployeeID = T2.employee_id WHERE T2.document_type = 'GV' INTERSECT SELECT T1.name , T1.name FROM employee AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id WHERE T2.budget = 'Homeland Security'
SELECT T1.name , T1.trade_name FROM employee AS T1 JOIN management AS T2 ON T1.employee_id = T2.project WHERE T2.budget = 'History' INTERSECT SELECT T1.name , T1.trade_name FROM employee AS T1 JOIN management AS T2 ON T1.employee_id = T2.project_id WHERE T2.budget = 'Homeland Security'
SELECT name , trade_name FROM dorm WHERE product_id NOT IN (SELECT T1.project_id FROM products AS T1 JOIN Documents AS T2 ON T1.project = T2.code WHERE T2.product_name = 'Protoporphyrinogen IX')
SELECT name , trade_name FROM projects WHERE product_type = 'Protoporphyrinogen IX'
SELECT count(DISTINCT driverId) FROM CLASS
SELECT count(DISTINCT driverId) FROM CLASS
SELECT name FROM inst WHERE name LIKE "%ALA%"
SELECT t2.name FROM documents AS t1 JOIN <unk> AS t2 ON t1.<unk> = t2.cName WHERE t1.name LIKE "%ROY%"
SELECT count(*) , job FROM employee GROUP BY role
SELECT trade_name , count(*) FROM employee GROUP BY trade_name
SELECT T2.school_name , T2.Type FROM professor AS T1 JOIN department AS T2 ON T1.department_id = T2.department_id WHERE T1.title = 'Sponsor' ORDER BY T1.creation
SELECT school_code , nickname FROM Ref_Shipping_Agents ORDER BY built_year
SELECT school_code , LOCATION FROM ship WHERE affiliation = 'Cytosol'
SELECT school_code , LOCATION FROM ship WHERE affiliation = 'Cytosol'
SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1
SELECT founded FROM Rooms ORDER BY built_year DESC LIMIT 1;
SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1
SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1
SELECT count(DISTINCT school_code) FROM basketball_match
SELECT count(DISTINCT school_code) FROM mailshot_customers
SELECT t1.acc_type FROM employee AS t1 JOIN Documents AS t2 ON t1.employee_id = t2.employee_id ORDER BY t2.rental DESC LIMIT 1
SELECT employee_name FROM employee ORDER BY dateundergoes LIMIT 1
SELECT t1.Primary_conference FROM documents AS t1 JOIN captain AS t2 ON t1.document_id = t2.document_id GROUP BY t2.document_type ORDER BY count(*) ASC LIMIT 1
SELECT t1.Primary_conference FROM documents AS t1 JOIN captain AS t2 ON t1.document_id = t2.document_id GROUP BY t1.document_type ORDER BY count(*) ASC LIMIT 1
SELECT T2.name , T2.ACC_Regular_Season FROM documents AS T1 JOIN Products AS T2 ON T1.document_id = T2.document_id WHERE T1.founded = (SELECT max(T1.emp_working) FROM documents AS T1 JOIN professor AS T2 ON T1.emp_ID = T2.emp_ID WHERE T1.founded = 'Homeland Security')
SELECT T2.name , T2.ACC_Regular_Type FROM documents AS T1 JOIN Products AS T2 ON T1.document_id = T2.document_id GROUP BY T1.school_code ORDER BY count(*) DESC LIMIT 1
SELECT T2.location , T2.name FROM All_documents AS T1 JOIN Ref_locations AS T2 ON T1.location = T2.code WHERE T1.name = 'Clemson'
SELECT T2.location , T1.name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.location = T2.document_id WHERE T1.document_name = 'Clemson'
SELECT avg(budget) FROM university WHERE founded < 1850
SELECT avg(enrollment) FROM university WHERE founded < 1850
SELECT T1.name , T1.age , T1.age FROM Student AS T1 JOIN management AS T2 ON T1.project_id = T2.code WHERE T2.year = (SELECT max(age) FROM captain)
SELECT enrollment , primary_conference FROM documents WHERE destination = 'China' ORDER BY founded LIMIT 1
SELECT max(market_share) , min(market_share) , max(market_share) FROM department
SELECT avg(enrollment) , min(enrollment) FROM department
SELECT sum(enrollment) , country FROM department GROUP BY TYPE
SELECT sum(T2.enrollment) , T1.main_industry FROM department AS T1 JOIN department AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id
SELECT count(*) FROM submission WHERE ID NOT IN (SELECT Submission_ID FROM products)
SELECT count(*) FROM ship WHERE id NOT IN (SELECT T1.Code FROM affected_market AS T1 JOIN company AS T2 ON T1.company_id = T2.track_id WHERE T2.Name = 'Procrastin-X')
SELECT TYPE FROM department WHERE main_industry = 'Tokyo' OR YEAR > 300
SELECT TYPE FROM department WHERE main_industry = 'USA' OR YEAR < 100
SELECT count(DISTINCT TYPE) , count(DISTINCT TYPE FROM department GROUP BY TYPE
SELECT count(DISTINCT CLASS) FROM department
SELECT count(*) FROM department WHERE LOCATION LIKE "%Express%"
SELECT count(*) FROM department AS T1 JOIN party AS T2 ON T1.Manufacturer = T2.code WHERE T1.name LIKE "%F%"
SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.Manufacturer = T2.code WHERE T1.age < (SELECT avg(ticket_price) FROM department)
SELECT DISTINCT T2.name FROM exhibition AS T1 JOIN team AS T2 ON T1.Manufacturer = T2.code WHERE T1.ticket_price < (SELECT avg(ticket_price) FROM train)
SELECT count(*) , T1.name FROM management AS T1 JOIN enroll AS T2 ON T1.department = T2.department_id WHERE T2.market_share > 1 GROUP BY T1.TYPE
SELECT count(*) , count(*) FROM university WHERE Height > 3
SELECT sum(T1.ROM_working) , T1.main_industry FROM phone AS T1 JOIN roller_coaster AS T2 ON T1.Graphics_ID = T2.screen_mode WHERE T2.work_type = 'China' GROUP BY T1.work_type
SELECT avg(market_share) , min(market_share) , max(market_share) FROM phone WHERE Memory_in_coaster = 'China' GROUP BY TYPE
SELECT max(market_share) FROM department
SELECT max(market_share) FROM department
SELECT * FROM CLASS AS T1 JOIN Projects AS T2 ON T1.Code = T2.ArtistId
SELECT * FROM * FROM CLASS
SELECT Name FROM team ORDER BY built_year DESC
SELECT Name FROM team ORDER BY built_year DESC
SELECT name FROM manufacturers WHERE revenue BETWEEN 120 AND 150
SELECT name , RAM_MiB FROM department ORDER BY name ASC LIMIT 1
SELECT * FROM phone WHERE name = 'Michael Young'
SELECT count(*) FROM phone WHERE name = 'A Puzzling Parallax'
SELECT max(T1.hours) , min(T2.Speed) FROM department AS T1 JOIN manufacturers AS T2 ON T1.department_id = T2.department_id WHERE T2.name = 'Michael Rogers'
SELECT avg(T1.ROM_Passengers) FROM home_market AS T1 JOIN management AS T2 ON T1.department = T2.department_id WHERE T2.name = 'English'
SELECT T2.name , T2.name FROM affected_register_branch AS T1 JOIN phone AS T2 ON T1.Editor_ID = T2.Editor_ID WHERE T1.Launch_year > 2000 OR T1.year = 'Carol'
SELECT T2.Name , T2.Name FROM university AS T1 JOIN phone AS T2 ON T1.Graphics_ID = T2.EmployeeID WHERE T1.D LIKE '%a%'
SELECT T1.Char_cells , T1.date FROM screen_cross_ID AS T1 JOIN phone AS T2 ON T1.Debate_ID = T2.Debate_ID WHERE T2.Name = 'Hardware'
SELECT T2.Name , T2.Carrier FROM film AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.Code JOIN party AS T3 ON T1.Graphics_ID = T3.Graphics_ID WHERE T3.Type = 'Graphics'
SELECT T1.Name , T2.Name FROM event AS T1 JOIN event AS T2 ON T1.event_id = T2.event_id GROUP BY T1.event_id ORDER BY count(*) ASC LIMIT 1
